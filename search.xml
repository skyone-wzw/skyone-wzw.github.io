<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android学习笔记之应用资源</title>
    <url>/2021/01/30/android-xue-xi-bi-ji-zhi-ying-yong-zi-yuan/</url>
    <content><![CDATA[<h1 id="资源文件的存放位置"><a href="#资源文件的存放位置" class="headerlink" title="资源文件的存放位置"></a>资源文件的存放位置</h1><p>首先来看一下Android工程的目录结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MyProject&#x2F;</span><br><span class="line">	manifests&#x2F;</span><br><span class="line">		AndroidManifest.xml</span><br><span class="line">    java&#x2F;</span><br><span class="line">    	host.skyone.resource&#x2F;</span><br><span class="line">        	MainActivity.java</span><br><span class="line">    res&#x2F;</span><br><span class="line">        anim&#x2F;</span><br><span class="line">        color&#x2F;</span><br><span class="line">        drawable&#x2F;</span><br><span class="line">            skyone.png</span><br><span class="line">        layout&#x2F;</span><br><span class="line">            activity_main.xml</span><br><span class="line">        menu&#x2F;</span><br><span class="line">        xml&#x2F;</span><br><span class="line">        raw&#x2F;</span><br><span class="line">        mipmap&#x2F;</span><br><span class="line">            icon.png</span><br><span class="line">        values&#x2F;</span><br><span class="line">            strings.xml</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="left">目录</th>
<th align="left">资源类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>anim/</code></td>
<td align="left">定义动画属性的XML文件。它们被保存在<code>res/anim/</code>文件夹下，通过<code>R.anim</code>类访问</td>
</tr>
<tr>
<td align="left"><code>color/</code></td>
<td align="left">定义颜色状态列表的XML文件。它们被保存在res/color/文件夹下，通过<code>R.color</code>类访问</td>
</tr>
<tr>
<td align="left"><code>drawable/</code></td>
<td align="left">图片文件，如<code>.png</code>,<code>.jpg</code>,<code>.gif</code>或者<code>XML</code>文件，被编译为位图、状态列表、形状、动画图片。它们被保存在<code>res/drawable/</code>文件夹下，通过<code>R.drawable</code>类访问</td>
</tr>
<tr>
<td align="left"><code>layout/</code></td>
<td align="left">定义用户界面布局的XML文件。它们被保存在res/layout/文件夹下，通过<code>R.layout</code>类访问</td>
</tr>
<tr>
<td align="left"><code>menu/</code></td>
<td align="left">定义应用程序菜单的XML文件，如选项菜单，上下文菜单，子菜单等。它们被保存在<code>res/menu/</code>文件夹下，通过<code>R.menu</code>类访问</td>
</tr>
<tr>
<td align="left"><code>raw/</code></td>
<td align="left">任意的文件以它们的原始形式保存。需要根据名为<code>R.raw.filename</code>的资源ID，通过调用<code>Resource.openRawResource()</code>来打开<code>raw</code>文件</td>
</tr>
<tr>
<td align="left"><code>values/</code></td>
<td align="left">包含简单值(如字符串，整数，颜色等)的XML文件。这里有一些文件夹下的资源命名规范。arrays.xml代表数组资源，通过<code>R.array</code>类访问；<code>integers.xml</code>代表整数资源，通过<code>R.integer</code>类访问；<code>bools.xml</code>代表布尔值资源，通过<code>R.bool</code>类访问；<code>colors.xml</code>代表颜色资源，通过<code>R.color</code>类访问；<code>dimens.xml</code>代表维度值，通过<code>R.dimen</code>类访问；<code>strings.xml</code>代表字符串资源，通过<code>R.string</code>类访问；<code>styles.xml</code>代表样式资源，通过<code>R.style</code>类访问</td>
</tr>
<tr>
<td align="left"><code>xml/</code></td>
<td align="left">可以通过调用<code>Resources.getXML()</code>来在运行时读取任意的XML文件。可以在这里保存运行时使用的各种配置文件</td>
</tr>
<tr>
<td align="left"><code>minmap/</code></td>
<td align="left">保存应用的图标</td>
</tr>
</tbody></table>
<h1 id="简单的例子"><a href="#简单的例子" class="headerlink" title="简单的例子"></a>简单的例子</h1><h2 id="配置资源"><a href="#配置资源" class="headerlink" title="配置资源"></a>配置资源</h2><p>例如：将以下图片下载并命名为<code>skyone.png</code></p>
<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%BA%94%E7%94%A8%E8%B5%84%E6%BA%90/skyone.png" alt="skyone" style="zoom: 10%;" />

<p>移动到<code>res/drawable/</code>文件夹下，在<code>activity_main.xml</code>中加入<code>ImageView</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/imageView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;180dp&quot;</span><br><span class="line">        android:contentDescription=&quot;@string/img_skyone&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/skyone&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>在<code>res/values/strings.xml</code>中加入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;img_skyone&quot;</span>&gt;</span>Skyone<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>连接手机，编译运行。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code>activity_main.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/imageView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;180dp&quot;</span><br><span class="line">        android:contentDescription=&quot;@string/img_skyone&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/skyone&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;100dp&quot;</span><br><span class="line">        android:layout_height=&quot;100dp&quot;</span><br><span class="line">        android:background=&quot;#FFFFFF&quot;</span><br><span class="line">        android:onClick=&quot;onClickButton&quot;</span><br><span class="line">        android:text=&quot;@string/button&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/imageView&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>MainActivity.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickButton</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;欢迎访问Skyone哦！&quot;</span> , Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>strings.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>Resource<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;img_skyone&quot;</span>&gt;</span>Skyone<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;button&quot;</span>&gt;</span>点我~^_^~<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>AndroidManifest.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.resource&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.Resource&quot;&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>例图：</p>
<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%BA%94%E7%94%A8%E8%B5%84%E6%BA%90/pre.png" alt="例图" style="zoom:20%;" />]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常见命令</title>
    <url>/2020/10/24/linux-chang-jian-ming-ling/</url>
    <content><![CDATA[<h1 id="Linux常见命令"><a href="#Linux常见命令" class="headerlink" title="Linux常见命令"></a>Linux常见命令</h1><h2 id="一-文件与目录"><a href="#一-文件与目录" class="headerlink" title="一.文件与目录"></a>一.文件与目录</h2><ul>
<li><strong>ls</strong>（英文：list files）: 列出目录及文件名</li>
<li><strong>cd</strong>（英文：change directory）：切换目录</li>
<li><strong>pwd</strong>（英文：print work directory）：显示目前的目录</li>
<li><strong>mkdir</strong>（英文：make directory）：创建一个新的目录</li>
<li><strong>rmdir</strong>（英文：remove directory）：删除一个空的目录</li>
<li><strong>cp</strong>（英文：copy file）: 复制文件或目录</li>
<li><strong>rm</strong>（英文：remove）: 移除文件或目录</li>
<li><strong>mv</strong>（英文：move file）: 移动文件与目录，或修改文件与目录的名称</li>
</ul>
<h3 id="ls-列出目录及文件名"><a href="#ls-列出目录及文件名" class="headerlink" title="ls 列出目录及文件名"></a>ls 列出目录及文件名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ ls [目录]</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-a    列出全部的文件，包含隐藏文件( 开头为 . 的文件) (常用)</li>
<li>-d    仅列出目录本身，而不是列出目录内的文件数据(常用)</li>
<li>-r    列出包含文件的属性与权限等等数据(常用)</li>
</ul>
<h3 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a>cd 切换目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ cd [相对或绝对目录]</span><br></pre></td></tr></table></figure>
<h3 id="pwd-显示当前所在的目录"><a href="#pwd-显示当前所在的目录" class="headerlink" title="pwd 显示当前所在的目录"></a>pwd 显示当前所在的目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ pwd [-P]</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-P    显示出确实的路径，而非连结 (link) 路径</li>
</ul>
<h3 id="mkdir-创建新目录"><a href="#mkdir-创建新目录" class="headerlink" title="mkdir 创建新目录"></a>mkdir 创建新目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ mkdir [-mp] 目录名称</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-m    配置文件的权限</li>
<li>-p    直接将所需要的目录(包含上一级目录)递归创建起来</li>
</ul>
<h3 id="rmdir-删除空的目录"><a href="#rmdir-删除空的目录" class="headerlink" title="rmdir 删除空的目录"></a>rmdir 删除空的目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ rmdir [-p] 目录</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-p    连同上一级<strong>空目录</strong>也一起删除</li>
</ul>
<h3 id="cp-复制文件或目录"><a href="#cp-复制文件或目录" class="headerlink" title="cp 复制文件或目录"></a>cp 复制文件或目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ cp source destination</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-a    相当于 -pdr </li>
<li>-d    若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身</li>
<li>-f    若目标文件已经存在且无法开启，则移除后再尝试一次</li>
<li>-i    若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li>
<li>-l    进行硬式连结(hard link)的连结档创建，而非复制文件本身</li>
<li>-p    连同文件的属性一起复制，而非使用默认属性(备份文件时常用)</li>
<li>-r    递归持续复制，用于目录的复制行为(常用)</li>
<li>-s    复制成为符号连结档 (symbolic link)，亦即<strong>捷径文件</strong></li>
<li>-u    若 destination 比 source 旧才升级 destination </li>
</ul>
<h3 id="rm-移除文件或目录"><a href="#rm-移除文件或目录" class="headerlink" title="rm 移除文件或目录"></a>rm 移除文件或目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ rm [-fir] 文件或目录</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-f    忽略不存在的文件，不会出现警告信息</li>
<li>-i    删除前会询问是否执行</li>
<li>-r    递归删除，常用于删除目录。<strong>这是非常危险的选项！！！</strong></li>
</ul>
<h3 id="mv-移动文件与目录，或修改名称"><a href="#mv-移动文件与目录，或修改名称" class="headerlink" title="mv 移动文件与目录，或修改名称"></a>mv 移动文件与目录，或修改名称</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@wzw:~$ mv [-fiu] source destination</span><br><span class="line">user@wzw:~$ mv [-fiu] source1 source2 source3 .... directory</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>-f     如果目标文件已经存在，不会询问而直接覆盖</li>
<li>-i     若目标文件 (destination) 已存在，询问是否覆盖</li>
<li>-u    若目标文件已存在，且source较新，才会升级 (update)</li>
</ul>
<h2 id="二-查看文件内容"><a href="#二-查看文件内容" class="headerlink" title="二.查看文件内容"></a>二.查看文件内容</h2><ul>
<li><strong>cat</strong> 由第一行开始显示文件内容</li>
<li><strong>tac</strong> 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li>
<li><strong>nl</strong>  显示的时候，顺道输出行号！</li>
<li><strong>more</strong> 一页一页的显示文件内容</li>
<li><strong>less</strong> 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li>
<li><strong>head</strong> 只看头几行</li>
<li><strong>tail</strong> 只看尾巴几行</li>
</ul>
<h3 id="cat-从第一行开始显示文件内容"><a href="#cat-从第一行开始显示文件内容" class="headerlink" title="cat 从第一行开始显示文件内容"></a>cat 从第一行开始显示文件内容</h3><p>参数：</p>
<ul>
<li>-A     相当于 -vET</li>
<li>-b     列出行号，仅针对非空白行做行号显示，空白行不标行号</li>
<li>-E     结尾的断行字节用 $ 显示</li>
<li>-n     列印出行号，连同空白行也会有行号</li>
<li>-T     [tab] 键以 ^I 显示</li>
<li>-v     列出一些看不出来的特殊字符</li>
</ul>
<h3 id="tac-从最后一行行开始显示文件内容"><a href="#tac-从最后一行行开始显示文件内容" class="headerlink" title="tac 从最后一行行开始显示文件内容"></a>tac 从最后一行行开始显示文件内容</h3><p>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写。</p>
<h3 id="nl-显示行号"><a href="#nl-显示行号" class="headerlink" title="nl 显示行号"></a>nl 显示行号</h3><ul>
<li>-b ：指定行号指定的方式，主要有两种：<br>-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)<br>-b t ：如果有空行，空的那一行不要列出行号(默认值)</li>
<li>-n ：列出行号表示的方法，主要有三种：<br>-n ln ：行号在荧幕的最左方显示；<br>-n rn ：行号在自己栏位的最右方显示，且不加 0<br>-n rz ：行号在自己栏位的最右方显示，且加 0</li>
<li>-w ：行号栏位的占用的位数。</li>
</ul>
<h3 id="more-一页一页翻动"><a href="#more-一页一页翻动" class="headerlink" title="more 一页一页翻动"></a>more 一页一页翻动</h3><p>打开文件后，可以按：</p>
<ul>
<li>空白键 (space)：代表向下翻一页；</li>
<li>Enter     ：代表向下翻『一行』；</li>
<li>/字串     ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</li>
<li>:f      ：立刻显示出档名以及目前显示的行数；</li>
<li>q       ：代表立刻离开 more ，不再显示该文件内容。</li>
<li>b 或 [ctrl]-b ：代表往回翻页，只对文件有用。</li>
</ul>
<h3 id="less-一页一页翻动"><a href="#less-一页一页翻动" class="headerlink" title="less 一页一页翻动"></a>less 一页一页翻动</h3><p>打开文件后，可以按：</p>
<ul>
<li>空白键  ：向下翻动一页；</li>
<li>[pagedown]：向下翻动一页；</li>
<li>[pageup] ：向上翻动一页；</li>
<li>/字串   ：向下搜寻『字串』的功能；</li>
<li>?字串   ：向上搜寻『字串』的功能；</li>
<li>n     ：重复前一个搜寻 (与 / 或 ? 有关！)</li>
<li>N     ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li>
<li>q     ：离开 less 这个程序；</li>
</ul>
<h3 id="head-显示文件前面几行"><a href="#head-显示文件前面几行" class="headerlink" title="head 显示文件前面几行"></a>head 显示文件前面几行</h3><p>参数：</p>
<ul>
<li>-n ：后面接数字，代表显示几行</li>
</ul>
<h3 id="tail-显示文件后面几行"><a href="#tail-显示文件后面几行" class="headerlink" title="tail 显示文件后面几行"></a>tail 显示文件后面几行</h3><p>参数</p>
<ul>
<li>-n ：后面接数字，代表显示几行</li>
<li>-f ：持续侦测后面所接的档名，按下[ctrl]-c才会结束侦测</li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino核心库常用函数</title>
    <url>/2021/02/27/arduino-he-xin-ku-chang-yong-han-shu/</url>
    <content><![CDATA[<p>注意！以下内容中的 <code>int</code> 指代整型变量，但实际上整型变量也有所不同，例如 <code>analogWrite()</code> 函数的原型如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">analogWrite</span><span class="params">(<span class="keyword">uint8_t</span> pin, <span class="keyword">int</span> val)</span></span>;</span><br></pre></td></tr></table></figure>
<p>不必深究，只需要把它当成整形变量即可。</p>
<h1 id="必备函数"><a href="#必备函数" class="headerlink" title="必备函数"></a>必备函数</h1><h2 id="setup"><a href="#setup" class="headerlink" title="setup()"></a><code>setup()</code></h2><p>Arduino通电或复位后，即会开始执行 <code>setup()</code> 函数中的程序，该函数只会执行一次。</p>
<p>例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    pinMode(<span class="number">3</span>, OUTPUT);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">        pinMode(i, OUTPUT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="loop"><a href="#loop" class="headerlink" title="loop()"></a><code>loop()</code></h2><p>在setup() 函数中的程序执行完后，Arduino会接着会<strong>无限循环</strong> <code>loop()</code> 函数。</p>
<p>例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(led, HIGH);</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    digitalWrite(led, LOW);</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="main-函数呢？"><a href="#main-函数呢？" class="headerlink" title="main()函数呢？"></a><code>main()</code>函数呢？</h2><p>你可能会问，为什么这个C++项目没有 <code>main()</code> 函数呢？</p>
<p>实际上，实际上 <code>main()</code> 函数存在于Arduino核心库中，且仍然是程序的入口。</p>
<p>我们翻看一下 Arduino 核心库的 main.cpp 就可以看到：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">atexit</span><span class="params">(<span class="keyword">void</span> (*)())</span> </span>&#123; <span class="keyword">return</span> <span class="number">0</span>; &#125;	<span class="comment">//这表示参数为一个指向 无参数无返回值 的函数的指针</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initVariant</span><span class="params">()</span> __<span class="title">attribute__</span><span class="params">((weak))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initVariant</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setupUSB</span><span class="params">()</span> __<span class="title">attribute__</span><span class="params">((weak))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setupUSB</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    initVariant();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(USBCON)</span></span><br><span class="line">    USBDevice.attach();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    setup();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        loop();</span><br><span class="line">        <span class="keyword">if</span> (serialEventRun) serialEventRun();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由上可见，对于一个 Arduino 项目，必须包含 <code>setup()</code> 和 <code>loop()</code> ，而不能包含 <code>main()</code></p>
<h1 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h1><h2 id="pinMode-pin-mode"><a href="#pinMode-pin-mode" class="headerlink" title="pinMode(pin, mode)"></a><code>pinMode(pin, mode)</code></h2><p>在使用引脚前，需要先定义引脚的模式（读或写）</p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>int pin</code></p>
<p>指定的引脚编号，如： <code>10</code> , <code>A0</code> 等。</p>
</li>
<li><p><code>int mode</code></p>
<p>共三种模式：</p>
<ul>
<li><p><code>INPUT</code></p>
<p>输入模式</p>
</li>
<li><p><code>OUTPUT</code></p>
<p>输出模式</p>
</li>
<li><p><code>INPUT_PULLUP</code></p>
<p>输入上拉模式，也就是启动板载电阻，使该引脚可以直接连接 5V 电压而不需要在之间另加电阻，但<strong>不能接负电位，不能接大于 5V 的电压。</strong></p>
</li>
</ul>
</li>
</ul>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">pinMode(<span class="number">3</span>, OUTPUT);       <span class="comment">// 设置 3 号引脚为输出模式</span></span><br><span class="line">pinMode(<span class="number">4</span>, INPUT);        <span class="comment">// 设置 4 号引脚为输入模式</span></span><br><span class="line">pinMode(<span class="number">5</span>, INPUT_PULLUP); <span class="comment">// 设置 5 号引脚为输入上拉模式</span></span><br></pre></td></tr></table></figure>
<h2 id="digitalWrite-pin-value"><a href="#digitalWrite-pin-value" class="headerlink" title="digitalWrite(pin, value)"></a><code>digitalWrite(pin, value)</code></h2><p>设置指定引脚的电位，在此之前要保证该引脚已经 <code>pinMode</code> 过，且为输出模式。</p>
<h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>int pin</code></p>
<p>指定的引脚编号。</p>
</li>
<li><p><code>int value</code></p>
<p>可以为以下两者之一：</p>
<ul>
<li><p><code>HIGH</code></p>
<p>高电平</p>
</li>
<li><p><code>LOW</code></p>
<p>低电平</p>
</li>
</ul>
</li>
</ul>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">digitalWrite(<span class="number">3</span>, HIGH); <span class="comment">// 设置 3 号引脚为 高电平</span></span><br><span class="line">digitalWrite(<span class="number">4</span>, HIGH); <span class="comment">// 设置 3 号引脚为 低电平</span></span><br></pre></td></tr></table></figure>
<h2 id="digitalRead-pin"><a href="#digitalRead-pin" class="headerlink" title="digitalRead(pin)"></a><code>digitalRead(pin)</code></h2><p>读取指定引脚的电位，在此之前要保证该引脚已经 <code>pinMode</code> 过，且为输入模式</p>
<h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>int pin</code></p>
<p>指定的引脚编号。</p>
</li>
</ul>
<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><ul>
<li><p><code>int</code></p>
<p>指定的引脚的电位，为以下两者之一：</p>
<ul>
<li><p><code>HIGH</code></p>
<p>高电平</p>
</li>
<li><p><code>LOW</code></p>
<p>低电平</p>
</li>
</ul>
</li>
</ul>
<h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设 4 号引脚连接的是 高电平</span></span><br><span class="line"><span class="keyword">int</span> state = digitalWrite(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// state = HIGH; 也就是 stats = 1;</span></span><br></pre></td></tr></table></figure>
<h2 id="analogWrite-pin-value"><a href="#analogWrite-pin-value" class="headerlink" title="analogWrite(pin, value)"></a><code>analogWrite(pin, value)</code></h2><p>设定指定引脚的电位，在此之前要保证该引脚已经 <code>pinMode</code> 过，且为输出模式</p>
<p>此外，还要保证该引脚支持模拟输出，也就是引脚旁边有一个波浪线。</p>
<h3 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>int pin</code></p>
<p>指定的引脚编号。</p>
</li>
<li><p><code>int value</code></p>
<p>指定电位的值，范围为 <code>0~255</code> ，从 0V 到 5V 成比例对应。</p>
</li>
</ul>
<h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">digitalWrite(<span class="number">3</span>, <span class="number">0</span>);   <span class="comment">// 设置 3 号引脚为 0V</span></span><br><span class="line">digitalWrite(<span class="number">3</span>, <span class="number">255</span>); <span class="comment">// 设置 3 号引脚为 5V</span></span><br><span class="line">digitalWrite(<span class="number">3</span>, <span class="number">233</span>); <span class="comment">// 设置 3 号引脚为 (5 * 233 / 255)V</span></span><br></pre></td></tr></table></figure>
<h2 id="analogRead"><a href="#analogRead" class="headerlink" title="analogRead()"></a><code>analogRead()</code></h2><p>读取指定引脚的电位，在此之前要保证该引脚已经 <code>pinMode</code> 过，且为输入模式</p>
<p>此外，还要保证该引脚支持模拟输入，在 Arduino Uno 里支持模拟输入的只有： <code>A0</code> ， <code>A1</code> ， <code>A2</code> ，<code>A3</code> ， <code>A4</code> ， <code>A5</code> 六个。</p>
<h3 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>int pin</code></p>
<p>指定的引脚编号。</p>
</li>
</ul>
<h3 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h3><ul>
<li><p><code>int</code></p>
<p>指定的引脚的电位，范围： <code>0~999</code> ，从 0V 到 5V 成比例对应。</p>
</li>
</ul>
<h3 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设 4 号引脚连接的是 3V</span></span><br><span class="line"><span class="keyword">int</span> state = digitalWrite(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// state = 3 * 1000 / 5;</span></span><br></pre></td></tr></table></figure>
<h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><h2 id="delay-ms"><a href="#delay-ms" class="headerlink" title="delay(ms)"></a><code>delay(ms)</code></h2><p>程序停止一段时间</p>
<h3 id="参数-5"><a href="#参数-5" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>unsigned long ms</code></p>
<p>延时的时间，单位为毫秒</p>
</li>
</ul>
<h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">delay(<span class="number">500</span>); <span class="comment">// 延时 0.5 秒</span></span><br></pre></td></tr></table></figure>
<h2 id="delayMicroseconds-us"><a href="#delayMicroseconds-us" class="headerlink" title="delayMicroseconds(us)"></a><code>delayMicroseconds(us)</code></h2><h3 id="参数-6"><a href="#参数-6" class="headerlink" title="参数"></a>参数</h3><ul>
<li><p><code>unsigned int us</code></p>
<p>延时的时间，单位为微秒</p>
</li>
</ul>
<h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">delayMicrosecond(<span class="number">300</span>); <span class="comment">// 延时 0.0003 秒</span></span><br></pre></td></tr></table></figure>
<h2 id="millis"><a href="#millis" class="headerlink" title="millis()"></a><code>millis()</code></h2><h3 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h3><ul>
<li><p><code>unsigned long</code></p>
<p>Arduino通电后或复位后到现在的时间，单位毫秒</p>
</li>
</ul>
<h3 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> time = millis();</span><br></pre></td></tr></table></figure>
<h2 id="micros"><a href="#micros" class="headerlink" title="micros()"></a><code>micros()</code></h2><h3 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h3><ul>
<li><p><code>unsigned long</code></p>
<p>Arduino通电后或复位后到现在的时间，单位毫秒</p>
</li>
</ul>
<h3 id="示例-5"><a href="#示例-5" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> time = micros();</span><br></pre></td></tr></table></figure>
<h1 id="串口通信：Serial类"><a href="#串口通信：Serial类" class="headerlink" title="串口通信：Serial类"></a>串口通信：<code>Serial</code>类</h1><h2 id="Serial-begin"><a href="#Serial-begin" class="headerlink" title="Serial.begin()"></a><code>Serial.begin()</code></h2><p>该函数有两个重载，</p>
<ul>
<li><p><code>Serial.begin(speed)</code></p>
<ul>
<li><p>参数：</p>
<ul>
<li><p><code>speed</code></p>
<p>串口通信波特率，一般为9600，可以为：</p>
<p>300、600、1200、2400、4800、9600、14400、19200、28800、38400、57600、115200</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><code>Serial.begin(speed, config)</code></p>
<ul>
<li><p>参数</p>
<ul>
<li><p><code>speed</code> 同上</p>
</li>
<li><p><code>config</code></p>
<p>配置信息，具体如下表：</p>
<table>
<thead>
<tr>
<th align="center">可选配置</th>
<th align="center">数据位</th>
<th align="center">校验位</th>
<th align="center">停止位</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SERIAL_5N1</td>
<td align="center">5</td>
<td align="center">无</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_6N1</td>
<td align="center">6</td>
<td align="center">无</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_7N1</td>
<td align="center">7</td>
<td align="center">无</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_8N1(默认配置)</td>
<td align="center">8</td>
<td align="center">无</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_5N2</td>
<td align="center">5</td>
<td align="center">无</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_6N2</td>
<td align="center">6</td>
<td align="center">无</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_7N2</td>
<td align="center">7</td>
<td align="center">无</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_8N2</td>
<td align="center">8</td>
<td align="center">无</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_5E1</td>
<td align="center">5</td>
<td align="center">偶</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_6E1</td>
<td align="center">6</td>
<td align="center">偶</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_7E1</td>
<td align="center">7</td>
<td align="center">偶</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_8E1</td>
<td align="center">8</td>
<td align="center">偶</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_5E2</td>
<td align="center">5</td>
<td align="center">偶</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_6E2</td>
<td align="center">6</td>
<td align="center">偶</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_7E2</td>
<td align="center">7</td>
<td align="center">偶</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_8E2</td>
<td align="center">8</td>
<td align="center">偶</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_5O1</td>
<td align="center">5</td>
<td align="center">奇</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_6O1</td>
<td align="center">6</td>
<td align="center">奇</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_7O1</td>
<td align="center">7</td>
<td align="center">奇</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_8O1</td>
<td align="center">8</td>
<td align="center">奇</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">SERIAL_5O2</td>
<td align="center">5</td>
<td align="center">奇</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_6O2</td>
<td align="center">6</td>
<td align="center">奇</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_7O2</td>
<td align="center">7</td>
<td align="center">奇</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">SERIAL_8O2</td>
<td align="center">8</td>
<td align="center">奇</td>
<td align="center">2</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Serial-end"><a href="#Serial-end" class="headerlink" title="Serial.end()"></a><code>Serial.end()</code></h2><p>结束串口通信。释放该串口所在的数字引脚，使得其可以作为普通数字引脚使用。</p>
<h2 id="Serial-print-与-Serial-println"><a href="#Serial-print-与-Serial-println" class="headerlink" title="Serial.print() 与 Serial.println()"></a><code>Serial.print()</code> 与 <code>Serial.println()</code></h2><p>向串口写入数据，有许多重载</p>
<p>至于两者区别相信学过Java的都知道，<code>Serial.println()</code> 在输出数据的同时换行。</p>
<h2 id="Serial-read"><a href="#Serial-read" class="headerlink" title="Serial.read()"></a><code>Serial.read()</code></h2><p>接收串口数据</p>
<p><strong>返回值</strong></p>
<ul>
<li><p><code>int</code></p>
<p>返回从串口接收的数据，也就是依次接收 ASCII 字符，每次一个比特。</p>
</li>
</ul>
<h2 id="Serial-available"><a href="#Serial-available" class="headerlink" title="Serial.available()"></a><code>Serial.available()</code></h2><p>获取串口接收到的除去已经读取的数据的个数，也就是缓冲区的数据个数，缓冲区最多可保存64 bytes的数据。</p>
<p><strong>返回值</strong></p>
<ul>
<li><p><code>int</code></p>
<p>缓冲区的数据的比特数，<code>0~64</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>原创教程</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下安装Python3</title>
    <url>/2021/01/12/linux-xia-an-zhuang-python3/</url>
    <content><![CDATA[<h1 id="Linux下安装Python3"><a href="#Linux下安装Python3" class="headerlink" title="Linux下安装Python3"></a>Linux下安装Python3</h1><p>Linux里安装过多次Python，但依然不记得，今天来总结以下。</p>
<p>先把命令列出来：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz # 这里是对应版本的下载链接</span><br><span class="line">tar -zxvf ./Python-3.7.9.tgz</span><br><span class="line">cd Python-3.7.9</span><br><span class="line">./configure --prefix=/usr/software/python3 # 这里是你的安装目录</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ln -s /usr/software/python3/bin/python3 /usr/bin/</span><br><span class="line">ln -s /usr/software/python3/bin/pip3 /usr/bin/</span><br></pre></td></tr></table></figure>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>安装Python需要以下依赖，请确保已经全部安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br></pre></td></tr></table></figure>
<p>这些依赖我也不清楚T-T，总之不懂就运行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum isntall zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br></pre></td></tr></table></figure>
<h2 id="下载并解压Python源码"><a href="#下载并解压Python源码" class="headerlink" title="下载并解压Python源码"></a>下载并解压Python源码</h2><p>前往<a href="https://www.python.org/downloads/">Python官网</a>，找到对应Python版本的下载链接，例如我要下载的是<a href="https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz">3.7.9版</a>的。</p>
<p>注意应下载Gzip压缩后的源码<code>Gzipped source tarball</code>。</p>
<p>切换的一个用于下载的目录（不是安装目录），然后使用以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz # 这里是对应版本的下载链接</span><br></pre></td></tr></table></figure>
<p>如果显示没有<code>wget</code>可以使用以下命令安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install wget</span><br></pre></td></tr></table></figure>
<p>解压源码也很简单，用<code>tar</code>解压：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf Python-3.7.9.tgz # 下载得到的文件，后缀tgz指的是tar gzip</span><br></pre></td></tr></table></figure>
<p>然后进入解压得到的文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd Python-3.7.9</span><br></pre></td></tr></table></figure>
<h2 id="编译-amp-安装"><a href="#编译-amp-安装" class="headerlink" title="编译&amp;安装"></a>编译&amp;安装</h2><p>创建一个文件夹用于安装Python，这个安装路径由你自己决定！例如我把它安装到<code>/usr/software/python3</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /usr/software/python3</span><br></pre></td></tr></table></figure>
<p>配置安装路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/software/python3</span><br></pre></td></tr></table></figure>
<p>下面编译Python，使用make构建，这一步相对来说比较慢</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure>
<p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<h2 id="创建软链"><a href="#创建软链" class="headerlink" title="创建软链"></a>创建软链</h2><p>所谓软链，在这里可以理解为快捷方式，分别为<code>python3</code>和<code>pip3</code>创建软链</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/software/python3/bin/python3 /usr/bin/</span><br><span class="line">ln -s /usr/software/python3/bin/pip3 /usr/bin/</span><br></pre></td></tr></table></figure>
<p>注意！这里不能把软链命名为<code>python</code>和<code>pip</code>，因为大部分Linux系统自带python2.7，且部分功能要依靠python2.7，而执行python2.7和它的pip的命令是python和pip，所以这里用python3和pip3加以区分！</p>
<hr>
<p>OK，安装完成，使用以下命令检测一下吧~~~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -V # 大写的 V</span><br><span class="line">pip3 -V # 大写的 V</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python装饰器</title>
    <url>/2021/01/17/python-zhuang-shi-qi/</url>
    <content><![CDATA[<h1 id="装饰器是什么？"><a href="#装饰器是什么？" class="headerlink" title="装饰器是什么？"></a>装饰器是什么？</h1><p>装饰器(Decorators)是 Python 的一个重要部分。举一个不太恰当的比方，装饰器是一个函数，它以函数为参数，先执行一些操作，再调用作为参数的函数，然后再执行以下操作，例如下面的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    print(<span class="string">&quot;Do something before call func.&quot;</span>)</span><br><span class="line">    func() <span class="comment"># 调用func()</span></span><br><span class="line">    print(<span class="string">&quot;Do something after call func.&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>没错，就像C语言里的回调函数一样</p>
<p>可以这样使用它：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>():</span></span><br><span class="line">    print(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line"></span><br><span class="line">my_decorator(greed) <span class="comment"># 注意这里不是调用 greed</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;输出</span></span><br><span class="line"><span class="string">Do something before call func.</span></span><br><span class="line"><span class="string">Hello</span></span><br><span class="line"><span class="string">Do something after call func.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>然而，python作为一个优雅的语言，使用了特殊语法简化了上面的操作，下面的例子和上面的是等效的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    print(<span class="string">&quot;Do something before call func.&quot;</span>)</span><br><span class="line">    func() <span class="comment"># 调用func()</span></span><br><span class="line">    print(<span class="string">&quot;Do something after call func.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@my_decorator </span><span class="comment"># 也不是调用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>():</span></span><br><span class="line">    print(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line"></span><br><span class="line">greet</span><br><span class="line"><span class="string">&quot;&quot;&quot;输出</span></span><br><span class="line"><span class="string">Do something before call func.</span></span><br><span class="line"><span class="string">Hello</span></span><br><span class="line"><span class="string">Do something after call func.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="装饰器的使用"><a href="#装饰器的使用" class="headerlink" title="装饰器的使用"></a>装饰器的使用</h1><h2 id="适配带有参数的函数"><a href="#适配带有参数的函数" class="headerlink" title="适配带有参数的函数"></a>适配带有参数的函数</h2><p>前面的最简单的装饰器不能修饰带有参数的函数，而且修饰后的函数不能做参数之类的（想一想为什么）</p>
<p>其实也很容易解决，既然函数可以作为另一个函数的参数，那么它可不可以作为返回值呢？</p>
<p>当然可以！这是因为python一切皆对象，函数和变量究其本质都是对象<del>我怎么联想到了Linux一切皆文件@_@</del></p>
<p>现在我们将其修改一下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a_new_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="comment"># python 可以在函数里再定义函数，即嵌套函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        print(<span class="string">&quot;Do something before call func.&quot;</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        print(<span class="string">&quot;Do something after call func.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@a_new_decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>():</span></span><br><span class="line">    print(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greet()</span><br></pre></td></tr></table></figure>
<h2 id="保持函数名"><a href="#保持函数名" class="headerlink" title="保持函数名"></a>保持函数名</h2><p>现在我们在上面的代码后面再加一行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(greet.__name__)</span><br><span class="line"><span class="string">&quot;&quot;&quot;输出</span></span><br><span class="line"><span class="string">wrapped</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>哦不，这不是我们想要的结果，函数名被装饰器改写了！</p>
<p>幸好<code>functiontools</code>的<code>warps</code>装饰器可以解决这个问题，再改！</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a_new_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        print(<span class="string">&quot;Do something before call func.&quot;</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        print(<span class="string">&quot;Do something after call func.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@a_new_decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>():</span></span><br><span class="line">    print(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(greet.__name__)</span><br><span class="line"><span class="string">&quot;&quot;&quot;输出</span></span><br><span class="line"><span class="string">greet</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="带参数的装饰器"><a href="#带参数的装饰器" class="headerlink" title="带参数的装饰器"></a>带参数的装饰器</h2><p>上例中<code>wraps</code>也是装饰器，但他为什么要加括号调用，还可以添加参数？</p>
<p>先看看这个：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">b</span>():</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">c</span>():</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">d</span>():</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">response = a()()()()</span><br><span class="line"></span><br><span class="line"><span class="comment"># response = 1</span></span><br></pre></td></tr></table></figure>
<p>这样来看就很简单了，就是再嵌套一个函数嘛。。</p>
<p>有了这个思路，再改！</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">final_decorator</span>(<span class="params">output_filename=<span class="string">&quot;greet.txt&quot;</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">a_new_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(output_filename, <span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                greet_str = func(*args, **kwargs)</span><br><span class="line">                file.write(greet_str)</span><br><span class="line">            <span class="keyword">return</span> greet_str</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a_new_decorator</span><br><span class="line"></span><br><span class="line"><span class="meta">@final_decorator(<span class="params"><span class="string">&quot;233.txt&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + name</span><br><span class="line"></span><br><span class="line">print(greet(<span class="string">&quot;skyone&quot;</span>))</span><br><span class="line"><span class="string">&quot;&quot;&quot;输出</span></span><br><span class="line"><span class="string">Hello skyone</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;文件`123.txt`</span></span><br><span class="line"><span class="string">Hello skyone</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="花样写日志"><a href="#花样写日志" class="headerlink" title="花样写日志"></a>花样写日志</h1><h2 id="函数做装饰器"><a href="#函数做装饰器" class="headerlink" title="函数做装饰器"></a>函数做装饰器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logger</span>(<span class="params">logfile=<span class="string">&quot;out.log&quot;</span>, callback=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">logger_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapped_func</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            log_string = <span class="string">&quot;[logger] function &lt;&quot;</span> + func.__name__ + <span class="string">&quot;&gt; was called&quot;</span></span><br><span class="line">            print(log_string)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(logfile, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                file.write(log_string + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> callback <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                callback()</span><br><span class="line">            <span class="keyword">return</span> func(*args, *kwargs)</span><br><span class="line">        <span class="keyword">return</span> wrapped_func</span><br><span class="line">    <span class="keyword">return</span> logger_decorator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@logger()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(a())</span><br></pre></td></tr></table></figure>
<h2 id="类做装饰器"><a href="#类做装饰器" class="headerlink" title="类做装饰器"></a>类做装饰器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, logfile=<span class="string">&quot;out.log&quot;</span>, callback=<span class="literal">None</span></span>):</span></span><br><span class="line">        self.logfile = logfile</span><br><span class="line">        self.callback = callback</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, func</span>):</span></span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapped_func</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            log_string = <span class="string">&quot;[logger] function &lt;&quot;</span> + func.__name__ + <span class="string">&quot;&gt; was called&quot;</span></span><br><span class="line">            print(log_string)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(self.logfile, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                file.write(log_string + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> self.callback <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                self.callback()</span><br><span class="line">            self.notify()</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> wrapped_func</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">notify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@logger()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(a())</span><br></pre></td></tr></table></figure>
<p>这样做的好处是可以改写，而且比嵌套函数的方式更加整洁，下面的例子来自<a href="https://www.runoob.com/w3cnote/python-func-decorators.html">菜鸟教程</a></p>
<p>创建一个子类：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">email_logger</span>(<span class="params">Logger</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    一个logit的实现版本，可以在函数调用时发送email给管理员</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, email=<span class="string">&#x27;admin@myproject.com&#x27;</span>, *args, **kwargs</span>):</span></span><br><span class="line">        self.email = email</span><br><span class="line">        <span class="built_in">super</span>(email_logger, self).__init__(*args, **kwargs)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">notify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 发送Email的实现···</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>使用阿里云函数计算免费创建自己的音乐播放器API</title>
    <url>/2021/03/06/shi-yong-a-li-yun-han-shu-ji-suan-mian-fei-chuang-jian-zi-ji-de-yin-le-bo-fang-qi-api/</url>
    <content><![CDATA[<iframe style="border: none; width: 100%; height: 110px" src="https://music.luotianyi.space:19375/?_=|https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/music/夜航星%20-%20洛天依.mp3|https://ooo.0x0.ooo/2021/02/14/o08AS.png||https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/lrc/夜航星%20-%20洛天依.lrc"></iframe>

<p>这篇文章将一步一步的带你搭建一个播放器，也就是提供GET请求，返回一个带有播放器的网页，</p>
<p>你可以用 <code>iframe</code> 元素将这个播放器嵌入任何支持HTML语法的地方（MarkDown支持全部HTML语法）。</p>
<p>这个过程几乎是免费的，除非你的需求很大。当然，只是嵌入自己的文章的话，阿里云提供的免费额度是肯定够用的。</p>
<p><strong>感谢APlayer的作者！</strong></p>
<p>当然，利用这种方法，你可以做出许多有趣的API，快试试吧~</p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>写一个GET请求API，参数自己设计，根据参数自动生成对应的歌曲的音乐播放器页面。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先，你需要</p>
<ul>
<li><strong>一个已经备案的域名</strong></li>
<li>一个阿里云账号</li>
</ul>
<p>此外，技术栈：</p>
<ul>
<li>有 JavaScript 基础</li>
<li>了解 ejs 模板引擎，非必要，只是用来生成HTML代码</li>
</ul>
<h3 id="完成示例"><a href="#完成示例" class="headerlink" title="完成示例"></a>完成示例</h3><p>例如<a href="https://music.luotianyi.space:19375/?_=%7Chttps://cdn.jsdelivr.net/gh/skyone-res/static@master/res/music/%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.mp3%7Chttps://ooo.0x0.ooo/2021/02/14/o08AS.png%7C%7Chttps://cdn.jsdelivr.net/gh/skyone-res/static@master/res/lrc/%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.lrc">这个网页</a><del>GitHub+JsDeliver大法</del></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;music.luotianyi.space:19375&#x2F;?_&#x3D;|https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;skyone-res&#x2F;static@master&#x2F;res&#x2F;music&#x2F;夜航星%20-%20洛天依.mp3|https:&#x2F;&#x2F;ooo.0x0.ooo&#x2F;2021&#x2F;02&#x2F;14&#x2F;o08AS.png||https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;skyone-res&#x2F;static@master&#x2F;res&#x2F;lrc&#x2F;夜航星%20-%20洛天依.lrc</span><br></pre></td></tr></table></figure>
<p>你可以将其嵌入你的文章，例如本篇文章开头的音乐播放器就是这么实现的。</p>
<h2 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h2><h3 id="看文档"><a href="#看文档" class="headerlink" title="看文档"></a>看文档</h3><p>我们使用Node.js开发HTTP函数，首先看看文档吧：<a href="https://help.aliyun.com/document_detail/74757.html">https://help.aliyun.com/document_detail/74757.html</a></p>
<p>文档总结：</p>
<p>入口函数：<code>function(request, response, context)</code></p>
<p>其中：</p>
<ol>
<li><p><code>request</code></p>
<table>
<thead>
<tr>
<th align="left">字段</th>
<th align="left">类型</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>headers</code></td>
<td align="left">Object类型</td>
<td align="left">存放来自HTTP客户端的键值对。</td>
</tr>
<tr>
<td align="left"><code>path</code></td>
<td align="left">String类型</td>
<td align="left">表示HTTP路径。</td>
</tr>
<tr>
<td align="left"><code>queries</code></td>
<td align="left">Object类型</td>
<td align="left">存放来自HTTP路径中的查询部分的键值对，值的类型可以为字符串或数组。</td>
</tr>
<tr>
<td align="left"><code>method</code></td>
<td align="left">String类型</td>
<td align="left">表示HTTP方法。</td>
</tr>
<tr>
<td align="left"><code>clientIP</code></td>
<td align="left">String类型</td>
<td align="left">客户端的IP地址。</td>
</tr>
<tr>
<td align="left"><code>url</code></td>
<td align="left">String类型</td>
<td align="left">请求的地址。</td>
</tr>
</tbody></table>
<p>简单易懂，我就不多说了。</p>
</li>
<li><p><code>response</code></p>
<p>我们的目标很简单：组装一个网页并返回，所以我们只需要知道，返回网页有以下步骤</p>
<ul>
<li>使用 <code>response.setStatusCode(&quot;200&quot;)</code> 设置HTTP状态码为200，<strong>参数是字符串</strong></li>
<li>使用 <code>response.setHeader(&quot;Content-Type&quot;, &quot;text/html&quot;)</code> 提醒浏览器我们返回的是HTML代码</li>
<li>使用 <code>response.send(&quot;返回的网页代码&quot;)</code> 设置返回的HTML代码</li>
</ul>
</li>
<li><p><code>context</code></p>
<p>上下文，别问，我也不懂</p>
</li>
</ol>
<p>了解这么多就够了，例子太复杂，就不看了</p>
<h3 id="写模板"><a href="#写模板" class="headerlink" title="写模板"></a>写模板</h3><p>打开你的IDE，比如我用的WebStorm<del>学生党的除了没钱福利还是很多滴，感谢JetBrains！</del></p>
<p>新建ejs模板文件 <code>music.ejs</code> ，写个简单的模板，比如用APlayer这个轮子，如果不会<del>或者懒</del>就直接复制我的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Skyone - MusicPlayer&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10.1&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10.1&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html::-webkit-scrollbar &#123; display: none &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body style&#x3D;&quot;margin: 0&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;player&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    const ap &#x3D; new APlayer(&#123;</span><br><span class="line">        container: document.getElementById(&#39;player&#39;),</span><br><span class="line">        listFolded: true,</span><br><span class="line">        listMaxHeight: 70,</span><br><span class="line">        lrcType: 3,</span><br><span class="line">        audio: [</span><br><span class="line">            &lt;% for (let music of list) &#123; %&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                name: &quot;&lt;%&#x3D; music.name %&gt;&quot;,</span><br><span class="line">                artist: &quot;&lt;%&#x3D; music.artist %&gt;&quot;,</span><br><span class="line">                url: &quot;&lt;%&#x3D; music.url %&gt;&quot;,</span><br><span class="line">                &lt;% if (music.cover)  &#123; %&gt;</span><br><span class="line">                cover: &quot;&lt;%&#x3D; music.cover %&gt;&quot;,</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">                &lt;% if (music.lrc)  &#123; %&gt;</span><br><span class="line">                lrc: &quot;&lt;%&#x3D; music.lrc %&gt;&quot;,</span><br><span class="line">                lrcType: 3,</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">            &#125;,</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line">        ]</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="安装Node-js的包"><a href="#安装Node-js的包" class="headerlink" title="安装Node.js的包"></a>安装Node.js的包</h3><p>CMD打开文件夹，输入以下命令来安装ejs，有cnpm的改用cnpm，不懂就复制粘贴</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install ejs</span><br></pre></td></tr></table></figure>
<h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><p>咳，主函数<del>就一个函数</del>，创建文件<code>index.js</code> ，导入ejs</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&quot;ejs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>先写入口函数，根据你设计的GET请求API分析GET参数，把参数处理成对应的ejs数据，例如我给的ejs模板需要：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> list = [</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&quot;歌曲名称&quot;</span>,</span><br><span class="line">        url: <span class="string">&quot;歌曲链接&quot;</span>,</span><br><span class="line">        cover: <span class="string">&quot;专辑图片链接，可空&quot;</span> || <span class="literal">null</span>,</span><br><span class="line">        artist: <span class="string">&quot;歌手，可空&quot;</span> || <span class="string">&quot;未知&quot;</span>,</span><br><span class="line">        lrc: <span class="string">&quot;lrc歌词，可空&quot;</span> || <span class="literal">null</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        name: <span class="string">&quot;夜航星&quot;</span>,</span><br><span class="line">        url: <span class="string">&quot;https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/music/夜航星%20-%20洛天依.mp3&quot;</span>,</span><br><span class="line">        cover: <span class="string">&quot;https://ooo.0x0.ooo/2021/02/14/o08AS.png&quot;</span> || <span class="literal">null</span>,</span><br><span class="line">        artist: <span class="string">&quot;洛天依&quot;</span> || <span class="string">&quot;未知&quot;</span>,</span><br><span class="line">        lrc: <span class="string">&quot;https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/lrc/夜航星%20-%20洛天依.lrc&quot;</span> || <span class="literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>然后，设置header和statuscode，使用ejs模板生成网页并调用 <code>send()</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">response.setStatusCode(<span class="string">&quot;200&quot;</span>);</span><br><span class="line">response.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">response.send(ejs.render(fs.readFileSync(path.join(__dirname, <span class="string">&quot;music.ejs&quot;</span>)).toString(), &#123; list &#125;));</span><br></pre></td></tr></table></figure>
<p>同样，我给个完整的例子：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&quot;ejs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.handler = <span class="function">(<span class="params">req, res, context</span>) =&gt;</span> &#123;</span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html&quot;</span>)</span><br><span class="line">    <span class="keyword">const</span> params = &#123;</span><br><span class="line">        path: req.path,</span><br><span class="line">        queries: req.queries,</span><br><span class="line">        headers: req.headers,</span><br><span class="line">        method: req.method,</span><br><span class="line">        requestURI: req.url,</span><br><span class="line">        clientIP: req.clientIP,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (params.queries[<span class="string">&#x27;_&#x27;</span>] &amp;&amp; params.queries[<span class="string">&quot;_&quot;</span>].indexOf(<span class="string">&quot;|&quot;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">        res.setStatusCode(<span class="string">&#x27;400&#x27;</span>);</span><br><span class="line">        res.send(<span class="string">&quot;Params Error&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = params.queries[<span class="string">&quot;_&quot;</span>].split(<span class="string">&quot;^&quot;</span>)</span><br><span class="line">        <span class="keyword">let</span> list = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> data) &#123;</span><br><span class="line">            <span class="keyword">const</span> query = i.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line">            list[list.length] = &#123;</span><br><span class="line">                name: query[<span class="number">0</span>],</span><br><span class="line">                url: query[<span class="number">1</span>],</span><br><span class="line">                cover: query[<span class="number">2</span>] || <span class="literal">null</span>,</span><br><span class="line">                artist: query[<span class="number">3</span>] || <span class="string">&quot;未知&quot;</span>,</span><br><span class="line">                lrc: query[<span class="number">4</span>] || <span class="literal">null</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">let</span> filename = query[<span class="number">1</span>].split(<span class="string">&quot;/&quot;</span>).pop().split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>].split(<span class="string">&quot; - &quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (filename.length === <span class="number">2</span>) &#123;</span><br><span class="line">                    list[list.length - <span class="number">1</span>].name = filename[<span class="number">0</span>];</span><br><span class="line">                    list[list.length - <span class="number">1</span>].artist = filename[<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                res.setStatusCode(<span class="number">503</span>);</span><br><span class="line">                res.send(e);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res.setStatusCode(<span class="number">200</span>);</span><br><span class="line">        res.send(ejs.render(fs.readFileSync(path.join(__dirname, <span class="string">&quot;music.ejs&quot;</span>)).toString(), &#123; list &#125;));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        res.setStatusCode(<span class="number">503</span>);</span><br><span class="line">        res.send(<span class="string">&quot;Server Error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="我的API的参数"><a href="#我的API的参数" class="headerlink" title="我的API的参数"></a>我的API的参数</h3><p>就一个 <code>_</code> ，值为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名称(支持根据url自动获取:歌曲-歌手.xxx)|歌曲url|专辑图片url|歌手(支持根据url自动获取)|歌词url</span><br></pre></td></tr></table></figure>
<p>多首歌通过 <code>^</code> 分隔，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?_&#x3D;|https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;skyone-res&#x2F;static@master&#x2F;res&#x2F;music&#x2F;%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.mp3|https:&#x2F;&#x2F;ooo.0x0.ooo&#x2F;2021&#x2F;02&#x2F;14&#x2F;o08AS.png||https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;skyone-res&#x2F;static@master&#x2F;res&#x2F;lrc&#x2F;%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.lrc</span><br></pre></td></tr></table></figure>
<h3 id="保存、打包"><a href="#保存、打包" class="headerlink" title="保存、打包"></a>保存、打包</h3><p>保存，退出IDE，进入文件夹</p>
<p>将该文件夹下所有文件加入一个压缩包</p>
<h2 id="开通阿里云函数计算-Function-Compute"><a href="#开通阿里云函数计算-Function-Compute" class="headerlink" title="开通阿里云函数计算 Function Compute"></a>开通阿里云函数计算 Function Compute</h2><p>登录你的阿里云账号，进入<a href="https://www.aliyun.com/product/fc">此网页</a>开通。</p>
<p>阿里云函数计算计费项及其免费额度如下表：</p>
<table>
<thead>
<tr>
<th align="left">计费项</th>
<th align="left">价格</th>
<th align="left">免费额度</th>
</tr>
</thead>
<tbody><tr>
<td align="left">调用次数（次）</td>
<td align="left">0.00000133（元）</td>
<td align="left">1,000,000（次）</td>
</tr>
<tr>
<td align="left">执行时间（CU-秒）</td>
<td align="left">0.000110592（元）</td>
<td align="left">400,000（CU-秒）</td>
</tr>
<tr>
<td align="left">函数内数据传输流量</td>
<td align="left">0.8（元）</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">函数请求响应流量</td>
<td align="left">0.5（元）</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">CDN回源流量</td>
<td align="left">0.5（元）</td>
<td align="left">0</td>
</tr>
</tbody></table>
<p>我们使用的流量小到几乎可以忽略不计。。。</p>
<hr>
<p>选择 <strong>服务及函数–&gt;新增服务</strong></p>
<img src="F:\Blog\草稿\Server Less APlayer\新增服务.png" alt="新增服务" style="zoom: 50%;" />

<ul>
<li>服务名称：随意</li>
<li>描述：可填可不填</li>
<li>绑定日志：如果开启了日志服务可以勾选，同样有免费额度</li>
<li>链路追踪不开启<del>我穷，没钱</del></li>
</ul>
<p>如果开启了绑定日志，可能会让你授权，点击确认即可。</p>
<img src="F:\Blog\草稿\Server Less APlayer\新增服务-表单.png" alt="新增服务-表单" style="zoom: 50%;" />

<p>然后<strong>新增函数–&gt;HTTP函数</strong></p>
<img src="F:\Blog\草稿\Server Less APlayer\新增函数.png" alt="新增函数" style="zoom: 50%;" />

<ul>
<li>函数名：随意</li>
<li>环境：默认即可</li>
<li>上传代码，选择之前的压缩包</li>
<li>函数入口：格式<code>文件.函数名</code></li>
<li>打开高级设置</li>
<li>选弹性实例<del>我没钱</del></li>
<li>运行内存：最小的128MB都太多，10MB都不需要</li>
<li>超时时间：大于1秒即可</li>
<li>触发器名称：随意</li>
<li>认证方式：<code>anonymous</code></li>
<li>请求方式：改为<code>GET</code></li>
</ul>
<img src="F:\Blog\草稿\Server Less APlayer\新增函数-表单.png" alt="新增函数-表单" style="zoom: 50%;" />

<p>进入该函数，选择触发器，复制链接</p>
<img src="F:\Blog\草稿\Server Less APlayer\触发器链接.png" alt="触发器链接" style="zoom:50%;" />

<p>打开浏览器，粘贴链接，并在后面加上你的GET请求参数，我的例子可以用：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">?_=|https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/music/%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.mp3|https://ooo.0x0.ooo/2021/02/14/o08AS.png||https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/lrc/%E5%A4%9C%E8%88%AA%E6%98%9F%20-%20%E6%B4%9B%E5%A4%A9%E4%BE%9D.lrc</span><br></pre></td></tr></table></figure>
<p>如果一切正常，会自动下载一个文件，用编辑器打开发现是对应的HTML代码，好的，进入下一步</p>
<h2 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h2><p>选择<strong>自定义域名–&gt;创建域名</strong></p>
<p>输入你的<strong>已经备案的</strong>域名，需要开启HTTPS的自行百度这么申请SSL证书</p>
<p>路径填 <code>/</code> ，当然你懂的话自行修改</p>
<p>选择函数为刚才创建的，LATEST版</p>
<p>![自定义域名](F:\Blog\草稿\Server Less APlayer\自定义域名.png)</p>
<p>点确定后，进入你的域名服务商的域名解析控制台，为你的主域名添加对应的子域名，选择CNAME模式，指向上图复制的链接。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开如下网址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;你的域名&#x2F;你的get请求参数</span><br></pre></td></tr></table></figure>
<p>显示播放器即为成功。</p>
<p>嵌入网页：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;border:none:width:100%;height:110px;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://你的域名/你的get请求参数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="示例链接"><a href="#示例链接" class="headerlink" title="示例链接"></a>示例链接</h2><p>你可以用我建好的API试试</p>
<ul>
<li>URL：<code>https://music.luotianyi.space</code> </li>
<li>参数在<a href="#%E6%88%91%E7%9A%84API%E7%9A%84%E5%8F%82%E6%95%B0">这一段</a>有写</li>
</ul>
<p>例图：</p>
<p><a href="https://www.skyone.host/2021/02/24/win10-xia-pei-zhi-shu-mei-pai-pico-de-micropython-yu-c-huan-jing/">![例图](F:\Blog\草稿\Server Less APlayer\例图.png)</a></p>
<p><strong>注意：</strong>不保证我提供的示例会稳定运行，如果我发现有很多来自非我网站的调用，我会停止此API，<strong>所以，想要就自己动手，不要什么事都让被人给你做好！</strong></p>
<p><span style="color:red;font-size:1.2em;">本文完全原创，禁止转载</span>，如果真的想转载，请<a href="mailto:wzw@skyone.host">邮箱联系我</a>。</p>
]]></content>
      <categories>
        <category>原创教程</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>制作一个获取网易云音乐下载链接的服务器</title>
    <url>/2020/12/20/zhi-zuo-yi-ge-huo-qu-wang-yi-yun-yin-le-xia-zai-lian-jie-de-fu-wu-qi/</url>
    <content><![CDATA[<h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul>
<li>Koa基础</li>
</ul>
<p>推荐一篇<a href="http://www.ruanyifeng.com/blog/2017/08/koa.html?bsh_bid=1983230339">博客</a>，把koa讲的非常易懂，几乎看懂他提供的例子后koa就会得差不多了，如果有时间，我可能也会写一篇教程。</p>
<ul>
<li>JavaScript基础</li>
<li>HTML基础</li>
</ul>
<h1 id="用到的Node-js模块"><a href="#用到的Node-js模块" class="headerlink" title="用到的Node.js模块"></a>用到的Node.js模块</h1><ul>
<li>koa</li>
<li>koa-route</li>
<li>axios</li>
<li>crypto-js</li>
</ul>
<p>如果你用的WebStorm，直接写</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">&quot;koa&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> CryptoJS = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> route = <span class="built_in">require</span>(<span class="string">&#x27;koa-route&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa();</span><br></pre></td></tr></table></figure>
<p>即可，WebStorm会自动提示你安装。</p>
<p>其实自己安装也很简单，先切换到工作目录，用cmd或shell运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install koa</span><br><span class="line">npm install koa-route</span><br><span class="line">npm install axios</span><br><span class="line">npm isntall crypto-js</span><br></pre></td></tr></table></figure>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="1-抓包、定位加密代码"><a href="#1-抓包、定位加密代码" class="headerlink" title="1. 抓包、定位加密代码"></a>1. 抓包、定位加密代码</h2><p>首先打开网易云音乐网页版，进入任意一首歌，打开浏览器的DevTools，选择Network，点击播放，稍加分析，不难看出，这个<code>post</code>请求是用来获取音乐链接。</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%8A%93%E5%8C%85.png" alt="抓包"></p>
<p>切换到调用栈(Initiator)，看看发送它的函数在哪</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E8%B0%83%E7%94%A8%E6%A0%88.png" alt="调用栈"></p>
<p>打开，发现是一大坨看不懂的代码</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E4%B8%80%E5%A4%A7%E5%9D%A8%E4%B8%8D%E6%83%B3%E7%9C%8B%E7%9A%84%E4%BB%A3%E7%A0%81.png" alt="一大坨不想看的代码"></p>
<p>看来这样走不通，那就搜搜post请求的data吧，<code>Ctrl</code>+<code>F</code>，搜<code>encSecKey</code></p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E8%AF%B7%E6%B1%82%E5%A4%B4.png" alt="请求头"></p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%AE%9A%E4%BD%8D%E5%8A%A0%E5%AF%86%E4%BB%A3%E7%A0%81.png" alt="定位加密代码"></p>
<p>嗯，完美，很显然，这里的两个参数来自第13297行(可能你看到的行数和我不一样)的<code>window.asrsea()</code>函数</p>
<p>先刷新一下，再在那一行打个断点，点击播放</p>
<p>断点触发，进入<code>window.asrsea()</code>函数</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E8%BF%9B%E5%85%A5%E5%8A%A0%E5%AF%86%E5%87%BD%E6%95%B0.png" alt="进入加密函数"></p>
<p>再在那个<code>d(d,e,f,g)</code>函数的第一行打个断点，可以看到这就是我们要找的加密函数。</p>
<h2 id="2-分析加密代码"><a href="#2-分析加密代码" class="headerlink" title="2. 分析加密代码"></a>2. 分析加密代码</h2><p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%8A%A0%E5%AF%86%E4%BB%A3%E7%A0%81.png" alt="加密代码"></p>
<p>在左边的局部变量中看出，<code>d</code>保存的是一个字符串化的json，保存着要获取的歌曲id</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    id: [</span><br><span class="line">        <span class="number">32102297</span></span><br><span class="line">    ],</span><br><span class="line">    level: &quot;standard&quot;,</span><br><span class="line">    encodeType: &quot;aac&quot;,</span><br><span class="line">    csrf_token: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>经过多次测试，<code>e</code>是一个定值：<code>&quot;010001&quot;</code>，来自<code>[&quot;流泪&quot;, &quot;强&quot;]</code>两个表情转换为对应的代码，转换映射如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;色&quot;</span>: <span class="string">&quot;00e0b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;流感&quot;</span>: <span class="string">&quot;509f6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;这边&quot;</span>: <span class="string">&quot;259df&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;弱&quot;</span>: <span class="string">&quot;8642d&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;嘴唇&quot;</span>: <span class="string">&quot;bc356&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;亲&quot;</span>: <span class="string">&quot;62901&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;开心&quot;</span>: <span class="string">&quot;477df&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;呲牙&quot;</span>: <span class="string">&quot;22677&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;憨笑&quot;</span>: <span class="string">&quot;ec152&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;猫&quot;</span>: <span class="string">&quot;b5ff6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;皱眉&quot;</span>: <span class="string">&quot;8ace6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;幽灵&quot;</span>: <span class="string">&quot;15bb7&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;蛋糕&quot;</span>: <span class="string">&quot;b7251&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;发怒&quot;</span>: <span class="string">&quot;52b3a&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;大哭&quot;</span>: <span class="string">&quot;b17a8&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;兔子&quot;</span>: <span class="string">&quot;76aea&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;星星&quot;</span>: <span class="string">&quot;8a5aa&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;钟情&quot;</span>: <span class="string">&quot;76d2e&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;牵手&quot;</span>: <span class="string">&quot;41762&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;公鸡&quot;</span>: <span class="string">&quot;9ec4e&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;爱意&quot;</span>: <span class="string">&quot;e341f&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;禁止&quot;</span>: <span class="string">&quot;56135&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;狗&quot;</span>: <span class="string">&quot;fccf6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;亲亲&quot;</span>: <span class="string">&quot;95280&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;叉&quot;</span>: <span class="string">&quot;104e0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;礼物&quot;</span>: <span class="string">&quot;312ec&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;晕&quot;</span>: <span class="string">&quot;bda92&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;呆&quot;</span>: <span class="string">&quot;557c9&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;生病&quot;</span>: <span class="string">&quot;38701&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;钻石&quot;</span>: <span class="string">&quot;14af6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;拜&quot;</span>: <span class="string">&quot;c9d05&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;怒&quot;</span>: <span class="string">&quot;c4f7f&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;示爱&quot;</span>: <span class="string">&quot;0c368&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;汗&quot;</span>: <span class="string">&quot;5b7a4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;小鸡&quot;</span>: <span class="string">&quot;6bee2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;痛苦&quot;</span>: <span class="string">&quot;55932&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;撇嘴&quot;</span>: <span class="string">&quot;575cc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;惶恐&quot;</span>: <span class="string">&quot;e10b4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;口罩&quot;</span>: <span class="string">&quot;24d81&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;吐舌&quot;</span>: <span class="string">&quot;3cfe4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;心碎&quot;</span>: <span class="string">&quot;875d3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;生气&quot;</span>: <span class="string">&quot;e8204&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;可爱&quot;</span>: <span class="string">&quot;7b97d&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;鬼脸&quot;</span>: <span class="string">&quot;def52&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;跳舞&quot;</span>: <span class="string">&quot;741d5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;男孩&quot;</span>: <span class="string">&quot;46b8e&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;奸笑&quot;</span>: <span class="string">&quot;289dc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;猪&quot;</span>: <span class="string">&quot;6935b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;圈&quot;</span>: <span class="string">&quot;3ece0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;便便&quot;</span>: <span class="string">&quot;462db&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;外星&quot;</span>: <span class="string">&quot;0a22b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;圣诞&quot;</span>: <span class="string">&quot;8e7&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;流泪&quot;</span>: <span class="string">&quot;01000&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;强&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;爱心&quot;</span>: <span class="string">&quot;0CoJU&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;女孩&quot;</span>: <span class="string">&quot;m6Qyw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;惊恐&quot;</span>: <span class="string">&quot;8W8ju&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;大笑&quot;</span>: <span class="string">&quot;d&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>f</code>同样是定值，来自一下表情转换为代码</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[<span class="string">&quot;色&quot;</span>, <span class="string">&quot;流感&quot;</span>, <span class="string">&quot;这边&quot;</span>, <span class="string">&quot;弱&quot;</span>, <span class="string">&quot;嘴唇&quot;</span>, <span class="string">&quot;亲&quot;</span>, <span class="string">&quot;开心&quot;</span>, <span class="string">&quot;呲牙&quot;</span>, <span class="string">&quot;憨笑&quot;</span>, <span class="string">&quot;猫&quot;</span>, <span class="string">&quot;皱眉&quot;</span>, <span class="string">&quot;幽灵&quot;</span>, <span class="string">&quot;蛋糕&quot;</span>, <span class="string">&quot;发怒&quot;</span>, <span class="string">&quot;大哭&quot;</span>, <span class="string">&quot;兔子&quot;</span>, <span class="string">&quot;星星&quot;</span>, <span class="string">&quot;钟情&quot;</span>, <span class="string">&quot;牵手&quot;</span>, <span class="string">&quot;公鸡&quot;</span>, <span class="string">&quot;爱意&quot;</span>, <span class="string">&quot;禁止&quot;</span>, <span class="string">&quot;狗&quot;</span>, <span class="string">&quot;亲亲&quot;</span>, <span class="string">&quot;叉&quot;</span>, <span class="string">&quot;礼物&quot;</span>, <span class="string">&quot;晕&quot;</span>, <span class="string">&quot;呆&quot;</span>, <span class="string">&quot;生病&quot;</span>, <span class="string">&quot;钻石&quot;</span>, <span class="string">&quot;拜&quot;</span>, <span class="string">&quot;怒&quot;</span>, <span class="string">&quot;示爱&quot;</span>, <span class="string">&quot;汗&quot;</span>, <span class="string">&quot;小鸡&quot;</span>, <span class="string">&quot;痛苦&quot;</span>, <span class="string">&quot;撇嘴&quot;</span>, <span class="string">&quot;惶恐&quot;</span>, <span class="string">&quot;口罩&quot;</span>, <span class="string">&quot;吐舌&quot;</span>, <span class="string">&quot;心碎&quot;</span>, <span class="string">&quot;生气&quot;</span>, <span class="string">&quot;可爱&quot;</span>, <span class="string">&quot;鬼脸&quot;</span>, <span class="string">&quot;跳舞&quot;</span>, <span class="string">&quot;男孩&quot;</span>, <span class="string">&quot;奸笑&quot;</span>, <span class="string">&quot;猪&quot;</span>, <span class="string">&quot;圈&quot;</span>, <span class="string">&quot;便便&quot;</span>, <span class="string">&quot;外星&quot;</span>, <span class="string">&quot;圣诞&quot;</span>]</span><br></pre></td></tr></table></figure>
<p><code>g</code>同上，是<code>[&quot;爱心&quot;, &quot;女孩&quot;, &quot;惊恐&quot;, &quot;大笑&quot;]</code>转换为代码</p>
<p>所以</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">e = <span class="string">&quot;010001&quot;</span></span><br><span class="line">f = <span class="string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span></span><br><span class="line">g = <span class="string">&quot;0CoJUm6Qyw8W8jud&quot;</span></span><br></pre></td></tr></table></figure>
<p>嗯，常量搞清楚了，再看看加密方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d, e, b = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (d = <span class="number">0</span>; a &gt; d; d += <span class="number">1</span>)</span><br><span class="line">            e = <span class="built_in">Math</span>.random() * b.length,</span><br><span class="line">                e = <span class="built_in">Math</span>.floor(e),</span><br><span class="line">                c += b.charAt(e);</span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> c = CryptoJS.enc.Utf8.parse(b)</span><br><span class="line">            , d = CryptoJS.enc.Utf8.parse(<span class="string">&quot;0102030405060708&quot;</span>)</span><br><span class="line">            , e = CryptoJS.enc.Utf8.parse(a)</span><br><span class="line">            , f = CryptoJS.AES.encrypt(e, c, &#123;</span><br><span class="line">                iv: d,</span><br><span class="line">                mode: CryptoJS.mode.CBC</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">return</span> f.toString()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d, e;</span><br><span class="line">        <span class="keyword">return</span> setMaxDigits(<span class="number">131</span>),</span><br><span class="line">            d = <span class="keyword">new</span> RSAKeyPair(b, <span class="string">&quot;&quot;</span>, c),</span><br><span class="line">            e = encryptedString(d, a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params">d, e, f, g</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> h = &#123;&#125;</span><br><span class="line">            , i = a(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> h.encText = b(d, g),</span><br><span class="line">            h.encText = b(h.encText, i),</span><br><span class="line">            h.encSecKey = c(i, e, f),</span><br><span class="line">            h</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">a, b, d, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> f = &#123;&#125;;</span><br><span class="line">        <span class="keyword">return</span> f.encText = c(a + e, b, d),</span><br><span class="line">            f</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.asrsea = d,</span><br><span class="line">        <span class="built_in">window</span>.ecnonasr = e</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>
<p><code>enText</code>就是post请求里的<code>params</code>参数，来自b函数加密两次</p>
<p><code>encSecKey</code>来自c函数加密一次</p>
<h3 id="a函数"><a href="#a函数" class="headerlink" title="a函数"></a>a函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d, e, b = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (d = <span class="number">0</span>; a &gt; d; d += <span class="number">1</span>)</span><br><span class="line">        e = <span class="built_in">Math</span>.random() * b.length,</span><br><span class="line">            e = <span class="built_in">Math</span>.floor(e),</span><br><span class="line">            c += b.charAt(e);</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>显然，用来生成指定长度的随机字符串</p>
<h3 id="b函数"><a href="#b函数" class="headerlink" title="b函数"></a>b函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = CryptoJS.enc.Utf8.parse(b)</span><br><span class="line">        , d = CryptoJS.enc.Utf8.parse(<span class="string">&quot;0102030405060708&quot;</span>)</span><br><span class="line">        , e = CryptoJS.enc.Utf8.parse(a)</span><br><span class="line">        , f = CryptoJS.AES.encrypt(e, c, &#123;</span><br><span class="line">            iv: d,</span><br><span class="line">            mode: CryptoJS.mode.CBC</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="keyword">return</span> f.toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>只使用了CryptoJS的函数，由于我们也用JavaScript写代码，直接复制即可，管他干嘛的-_-，只要在开头加个</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> CryptoJS = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>即可。</p>
<h3 id="c函数"><a href="#c函数" class="headerlink" title="c函数"></a>c函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d, e;</span><br><span class="line">    <span class="keyword">return</span> setMaxDigits(<span class="number">131</span>),</span><br><span class="line">        d = <span class="keyword">new</span> RSAKeyPair(b, <span class="string">&quot;&quot;</span>, c),</span><br><span class="line">        e = encryptedString(d, a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看着很短，实际上调用了自定义的类，这样就不能用对付b函数的方法了，这里我们先不去看c函数干了什么</p>
<p>我们看看它的参数</p>
<table>
<thead>
<tr>
<th>c函数的参数</th>
<th>d函数里对应的变量</th>
<th>值</th>
</tr>
</thead>
<tbody><tr>
<td>a</td>
<td>i</td>
<td>长度位16的随机字符串</td>
</tr>
<tr>
<td>b</td>
<td>e</td>
<td>“010001”</td>
</tr>
<tr>
<td>c</td>
<td>f</td>
<td>“00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7”</td>
</tr>
</tbody></table>
<p>站在网易的角度想想，向网易传了一串加密后的字符串，这个字符串经过一个随机数和三个常量的加密，要想解密，必然需要那个随机数，而<code>encSecKey</code>显然是用来提供那个随机数的，<code>encSecKey</code>只来自c函数且c函数接受一个随机数和两个常量，可以解密出那个随机数，因此：</p>
<p><strong>如果那个a函数得到的随机数如果我们用定值代替，嘿嘿嘿，c函数得出的</strong><code>encSecKey</code><strong>也将是定值！</strong></p>
<p>我们同调试函数即可获取一个随机数和与之对应的加密后的<code>encSecKey</code></p>
<p>我获得的是：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">i = <span class="string">&quot;bEjJE2aqLOyTEZiv&quot;</span></span><br><span class="line">encSecKey = <span class="string">&quot;3e7ad1dbe03a65fc32268930314b88bcbfc1e9782c3b398c30b62776e39b66a048a7122d282a13d99f9b63bd4e1940b136169fbedf56c1887933fa59a01f95c4c0e78a6d9bb7f91605408e9c1c3c2e57873c53cdf09a3d79a43cfe26260741097089e4bd19808aab395190274e687b807ffddee89f39d75f2288e28a582f3d08&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h3><p>经过上面的分析，我们可以得出如下代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> CryptoJS = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> c = CryptoJS.enc.Utf8.parse(b)</span><br><span class="line">        , d = CryptoJS.enc.Utf8.parse(<span class="string">&quot;0102030405060708&quot;</span>)</span><br><span class="line">        , e = CryptoJS.enc.Utf8.parse(a)</span><br><span class="line">        , f = CryptoJS.AES.encrypt(e, c, &#123;</span><br><span class="line">        iv: d,</span><br><span class="line">        mode: CryptoJS.mode.CBC</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> f.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maker</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> h = &#123;&#125;</span><br><span class="line">      , i = <span class="string">&quot;bEjJE2aqLOyTEZiv&quot;</span>;</span><br><span class="line">    h.encText = b(d, <span class="string">&quot;0CoJUm6Qyw8W8jud&quot;</span>);</span><br><span class="line">    h.encText = b(h.encText, i);</span><br><span class="line">    h.encSecKey = <span class="string">&quot;3e7ad1dbe03a65fc32268930314b88bcbfc1e9782c3b398c30b62776e39b66a048a7122d282a13d99f9b63bd4e1940b136169fbedf56c1887933fa59a01f95c4c0e78a6d9bb7f91605408e9c1c3c2e57873c53cdf09a3d79a43cfe26260741097089e4bd19808aab395190274e687b807ffddee89f39d75f2288e28a582f3d08&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> [h.encText, h.encSecKey];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>是不是很简单？</p>
<h2 id="3-实现后端"><a href="#3-实现后端" class="headerlink" title="3. 实现后端"></a>3. 实现后端</h2><p>这部分没什么可讲的，要讲的话也只是将web，因此，跳过。。</p>
<p>完整代码如下：</p>
<p>app.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">&quot;koa&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> route = <span class="built_in">require</span>(<span class="string">&#x27;koa-route&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa();</span><br><span class="line"><span class="keyword">const</span> CryptoJS = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> c = CryptoJS.enc.Utf8.parse(b)</span><br><span class="line">        , d = CryptoJS.enc.Utf8.parse(<span class="string">&quot;0102030405060708&quot;</span>)</span><br><span class="line">        , e = CryptoJS.enc.Utf8.parse(a)</span><br><span class="line">        , f = CryptoJS.AES.encrypt(e, c, &#123;</span><br><span class="line">        iv: d,</span><br><span class="line">        mode: CryptoJS.mode.CBC</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> f.toString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maker</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> h = &#123;&#125;</span><br><span class="line">      , i = <span class="string">&quot;bEjJE2aqLOyTEZiv&quot;</span>;</span><br><span class="line">    h.encText = b(d, <span class="string">&quot;0CoJUm6Qyw8W8jud&quot;</span>);</span><br><span class="line">    h.encText = b(h.encText, i);</span><br><span class="line">    h.encSecKey = <span class="string">&quot;3e7ad1dbe03a65fc32268930314b88bcbfc1e9782c3b398c30b62776e39b66a048a7122d282a13d99f9b63bd4e1940b136169fbedf56c1887933fa59a01f95c4c0e78a6d9bb7f91605408e9c1c3c2e57873c53cdf09a3d79a43cfe26260741097089e4bd19808aab395190274e687b807ffddee89f39d75f2288e28a582f3d08&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> [h.encText, h.encSecKey];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> page = <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">    ctx.response.type = <span class="string">&quot;html&quot;</span>;</span><br><span class="line">    ctx.response.body = fs.createReadStream(<span class="string">&quot;./index.html&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> request = <span class="keyword">async</span> (id) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> answer = &#123;<span class="attr">status</span>: <span class="number">500</span>, <span class="attr">body</span>: &#123;&#125;&#125;</span><br><span class="line">    <span class="keyword">let</span> params = maker(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        ids: [id],</span><br><span class="line">        level: <span class="string">&quot;standard&quot;</span>,</span><br><span class="line">        encodeType: <span class="string">&quot;aac&quot;</span>,</span><br><span class="line">        csrf_token: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">const</span> settings = &#123;</span><br><span class="line">        method: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">        url: <span class="string">&quot;https://music.163.com/weapi/song/enhance/player/url/v1?csrf_token=&quot;</span>,</span><br><span class="line">        data: querystring.stringify(&#123;</span><br><span class="line">            params: params[<span class="number">0</span>],</span><br><span class="line">            encSecKey: params[<span class="number">1</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">await</span> axios(settings)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            answer.body = res.data;</span><br><span class="line">            answer.status = <span class="literal">true</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            answer.body = err;</span><br><span class="line">            answer.status = <span class="literal">false</span>;</span><br><span class="line">        &#125;));</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> analyze = <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="string">&quot;&lt;p&gt;服务器出错！请联系管理员&lt;/p&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">await</span> request(ctx.request.query.id)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> data;</span><br><span class="line">            <span class="keyword">if</span> (res.status) &#123;</span><br><span class="line">                data = res.body;</span><br><span class="line">                <span class="keyword">if</span> (data.code === <span class="number">200</span>) &#123;</span><br><span class="line">                    result = <span class="string">&#x27;&lt;p&gt;歌曲id为:&#x27;</span> + data.data[<span class="number">0</span>].id + <span class="string">&#x27;&lt;/p&gt;&lt;p&gt;点击&lt;a href=&quot;&#x27;</span> + data.data[<span class="number">0</span>].url + <span class="string">&#x27;&quot;&gt;链接&lt;/a&gt;下载&lt;/p&gt;&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    result = <span class="string">&#x27;&lt;p&gt;输入错误！&lt;/p&gt;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            result = <span class="string">&#x27;&lt;p&gt;输入错误！&lt;/p&gt;&lt;br /&gt;&#x27;</span> + <span class="built_in">JSON</span>.stringify(err);</span><br><span class="line">        &#125;)</span><br><span class="line">    ctx.response.body = result;</span><br><span class="line">    ctx.response.type = <span class="string">&quot;html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">app.use(route.get(<span class="string">&quot;/&quot;</span>, page))</span><br><span class="line">app.use(route.get(<span class="string">&quot;/url&quot;</span>, analyze))</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>
<h2 id="4-实现前端"><a href="#4-实现前端" class="headerlink" title="4. 实现前端"></a>4. 实现前端</h2><p>额，前端我真的不太会，随便写一个吧，能用就行</p>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网易云音乐链接分析器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    输入歌曲id:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getWyyyy()&quot;</span>&gt;</span>获取下载链接<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">getWyyyy</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> input = <span class="built_in">document</span>.getElementById(<span class="string">&quot;id&quot;</span>).value</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.href = <span class="string">&quot;http://localhost:3000/url?id=&quot;</span> + input</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>记得完成后把<code>localhost</code>换成自己的IP或域名哦(如果像远程使用的话)</p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>运行命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure>
<p>打开浏览器，输入网址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:3000&#x2F;</span><br></pre></td></tr></table></figure>
<p>如果一切正常，你将看到你写的前端界面</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%B5%8B%E8%AF%9501.png" alt="测试01"></p>
<p>输入歌曲id，点击按钮</p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%B5%8B%E8%AF%9502.png" alt="测试02"></p>
<p><img src="https://tc.skyone.host/blog/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%B5%8B%E8%AF%9503.png" alt="测试03"></p>
<p>弹出下载界面，成功！</p>
]]></content>
      <categories>
        <category>API</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>JavaScript</tag>
        <tag>Koa</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin的基本控件及常见用法</title>
    <url>/2020/12/04/xamarin-de-ji-ben-kong-jian-ji-chang-jian-yong-fa/</url>
    <content><![CDATA[<h1 id="Xamarin的基本控件及常见用法"><a href="#Xamarin的基本控件及常见用法" class="headerlink" title="Xamarin的基本控件及常见用法"></a>Xamarin的基本控件及常见用法</h1><p>由于Xaml文件和HTML文件有点像，无法直接上传，只能截图了</p>
<h2 id="一一介绍"><a href="#一一介绍" class="headerlink" title="一一介绍"></a>一一介绍</h2><h3 id="一些通用的属性"><a href="#一些通用的属性" class="headerlink" title="一些通用的属性"></a>一些通用的属性</h3><h4 id="Margin-边距"><a href="#Margin-边距" class="headerlink" title="Margin 边距"></a>Margin 边距</h4><p>简而言之，就是设置控件距左上右下的边距，<strong>注意，不是HTML里的上右下左！</strong></p>
<h4 id="VerticalTextAlignment-amp-HorizontalTextAlignment-垂直-水平居中"><a href="#VerticalTextAlignment-amp-HorizontalTextAlignment-垂直-水平居中" class="headerlink" title="VerticalTextAlignment &amp; HorizontalTextAlignment 垂直/水平居中"></a>VerticalTextAlignment &amp; HorizontalTextAlignment 垂直/水平居中</h4><p>意思很明显，就是定义控件的文本的对齐方式，有<code>Center</code>,<code>Strat</code>,<code>End</code>三个选项，分别对应：<code>居中</code>、<code>左对齐</code>、<code>右对齐</code>。</p>
<h4 id="FontSize-字体大小"><a href="#FontSize-字体大小" class="headerlink" title="FontSize 字体大小"></a>FontSize 字体大小</h4><p>不多说，设置文本字体的大小</p>
<h4 id="以Label控件为例"><a href="#以Label控件为例" class="headerlink" title="以Label控件为例"></a>以Label控件为例</h4><p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8101.png" alt="代码01"></p>
<p>表示一个上下左右边距均为8，垂直/水平居中，字体24号，显示文本”<code>Apple</code>“，名称为”<code>AppleLabel</code>“的Label控件。</p>
<img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C01.png" alt="运行结果" style="zoom: 50%;" />

<h3 id="Label-文本框"><a href="#Label-文本框" class="headerlink" title="Label 文本框"></a>Label 文本框</h3><p>最简单的控件，用于显示文本，常见属性有：</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8102.png" alt="代码02"></p>
<img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C02.png" alt="运行结果02" style="zoom:50%;" />

<h3 id="Button-按钮"><a href="#Button-按钮" class="headerlink" title="Button 按钮"></a>Button 按钮</h3><p>按钮，按了就可以除非指定事件，比如：</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8103.png" alt="代码03"></p>
<p>配合如下代码：</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8104.png" alt="代码04"></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Xamarin.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Blog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">ContentPage</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MyPopupButton_Clicked</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            AppleLabel.Text = <span class="string">&quot;Apple&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C03.png" alt="运行结果03" style="zoom:50%;" />

<h3 id="Grid-表"><a href="#Grid-表" class="headerlink" title="Grid 表"></a>Grid 表</h3><p>一般用于排版，可以把其他控件放入其中，常见用法：</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8105.png" alt="代码05"></p>
<p>这个示例创建了一个3行2列的表，示例在本文末尾</p>
<h3 id="ScrollView-滚动视图"><a href="#ScrollView-滚动视图" class="headerlink" title="ScrollView 滚动视图"></a>ScrollView 滚动视图</h3><p>顾名思义，就是鼠标滚轮可以控制的可滚动视图</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8106.png" alt="代码06"></p>
<p>最好要定义它的高度</p>
<h3 id="用Label实现的超链接"><a href="#用Label实现的超链接" class="headerlink" title="用Label实现的超链接"></a>用Label实现的超链接</h3><p>通过附加属性使Label可点击，并添加下划线</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8107.png" alt="代码07"></p>
<p>配合C#代码：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Xamarin.Essentials;</span><br><span class="line"><span class="keyword">using</span> Xamarin.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">ContentPage</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="comment">//注意要异步打开</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">ClickMeHyperlinkButton_Tapped</span>(<span class="params"><span class="built_in">object</span> sender, </span></span></span><br><span class="line"><span class="function"><span class="params">                                                         EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">await</span> Browser.OpenAsync(<span class="string">&quot;https://www.bilibili.com&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Switch-开关"><a href="#Switch-开关" class="headerlink" title="Switch 开关"></a>Switch 开关</h3><p>没什么好说的</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8108.png" alt="代码08"></p>
<h3 id="Entry-输入框"><a href="#Entry-输入框" class="headerlink" title="Entry 输入框"></a>Entry 输入框</h3><p>同样没什么可说的</p>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8109.png" alt="代码09"></p>
<h2 id="完整的例子"><a href="#完整的例子" class="headerlink" title="完整的例子"></a>完整的例子</h2><p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E4%BB%A3%E7%A0%8110.png" alt="代码10"></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Xamarin.Essentials;</span><br><span class="line"><span class="keyword">using</span> Xamarin.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Blog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">ContentPage</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MyPopupButton_Clicked</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DisplayAlert(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;这是一个简单的弹窗&quot;</span>, <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">ClickMeHyperlinkButton_Tapped</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">await</span> Browser.OpenAsync(<span class="string">&quot;https://www.bilibili.com&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://tc.skyone.host/blog/post/Xamarin%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/%E7%A4%BA%E4%BE%8B.png" alt="示例"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10下配置树莓派Pico的MicroPython与C环境</title>
    <url>/2021/02/24/win10-xia-pei-zhi-shu-mei-pai-pico-de-micropython-yu-c-huan-jing/</url>
    <content><![CDATA[<iframe style="border: none; width: 100%; height: 100px" src="https://music.luotianyi.space:19375/?_=|https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/music/夜航星%20-%20洛天依.mp3|https://ooo.0x0.ooo/2021/02/14/o08AS.png||https://cdn.jsdelivr.net/gh/skyone-res/static@master/res/lrc/夜航星%20-%20洛天依.lrc"></iframe>

<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>本文章分别介绍了如何在<strong>Windows 10 x64</strong>环境下搭建MicroPython环境和C/C++环境。</p>
<p>其中，C/C++环境我用的IDE是JetBrains的CLion，所以<strong>不保证</strong>VSCode环境一定成功，欢迎留言讨论。</p>
<p><strong>注意！</strong>这篇教程假设你已经安装好了：CMake，mingw64，CLion或VSCode，Git(非必要，会从GitHub下载代码就行)</p>
<h1 id="MicroPython环境"><a href="#MicroPython环境" class="headerlink" title="MicroPython环境"></a>MicroPython环境</h1><h2 id="准备软件-文件"><a href="#准备软件-文件" class="headerlink" title="准备软件/文件"></a>准备软件/文件</h2><h3 id="MicroPython固件"><a href="#MicroPython固件" class="headerlink" title="MicroPython固件"></a>MicroPython固件</h3><p>打开<a href="https://www.raspberrypi.org/documentation/pico/getting-started/">https://www.raspberrypi.org/documentation/pico/getting-started/</a></p>
<p>选择MicroPython</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/pico%E5%AE%98%E7%BD%91.png" alt="pico官网" style="zoom: 40%;" />

<p>下载并命名为 <code>pico-micropython.uf2</code> ，重命名只是为了好记，无影响。</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E4%B8%8B%E8%BD%BDmicropython.png" alt="下载micropython" style="zoom:45%;" />

<h3 id="Thonny-IDE"><a href="#Thonny-IDE" class="headerlink" title="Thonny IDE"></a>Thonny IDE</h3><p>去官网下载即可，链接：<a href="https://thonny.org/">https://thonny.org/</a></p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/Thonny%E5%AE%98%E7%BD%91.png" alt="下载Thonny" style="zoom:67%;" />

<p>安装并打开Thonny，切换到一般模式</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E5%88%87%E6%8D%A2%E5%88%B0%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F.png" alt="切换到一般模式" style="zoom:50%;" />

<p>重启。然后选择视图，打开这三个</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/thonny%E8%AE%BE%E7%BD%AE.png" alt="打开Shell、变量、文件这三项" style="zoom:67%;" />

<h2 id="烧录固件"><a href="#烧录固件" class="headerlink" title="烧录固件"></a>烧录固件</h2><p>Pico烧录固件非常简单<del>实际上就是直接复制</del>，首先长按pico上的按钮，同时使用USB线连接电脑，然后松开，你应该就能在电脑上看到一个新的移动硬盘，将之前下载的MicroPython固件拖进去。</p>
<p><img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/pico%E7%9B%98.png" alt="Pico盘"></p>
<p>pico会自动重启，重启后你就看不到那个移动硬盘了。</p>
<p>这时右键开始键，选择设备管理器</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E6%89%93%E5%BC%80%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8.png" alt="打开设备管理器" style="zoom: 50%;" />

<p>在端口一栏下有一个USB串行设备，记住方框中的东西，例如我的是 <code>COM5</code></p>
<p><img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/USB%E4%B8%B2%E8%A1%8C%E8%AE%BE%E5%A4%87.png" alt="USB串行设备"></p>
<p>回到Thonny，选择：工具 - 设置</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E5%B7%A5%E5%85%B7-%E8%AE%BE%E7%BD%AE.png" alt="工具 - 设置" style="zoom: 67%;" />

<p>按下图选择：</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E9%80%89%E6%8B%A9pico.png" alt="选择Pico" style="zoom: 67%;" />

<p>下面的端口选择刚刚让你记住的那个，我的是 <code>COM5</code>  。</p>
<p>点击确认，完成！</p>
<h2 id="点亮板载LED"><a href="#点亮板载LED" class="headerlink" title="点亮板载LED"></a>点亮板载LED</h2><p>在Shell中依此执行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line">led = Pin(<span class="number">25</span>, Pin.OUT)</span><br><span class="line">led.value(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/python%E4%BB%A3%E7%A0%81.png" alt="MicroPython代码" style="zoom:67%;" />

<p>快去看看板载LED是不是亮了！</p>
<h1 id="C-C-环境"><a href="#C-C-环境" class="headerlink" title="C/C++环境"></a>C/C++环境</h1><h2 id="准备软件-文件-1"><a href="#准备软件-文件-1" class="headerlink" title="准备软件/文件"></a>准备软件/文件</h2><h3 id="下载SDK"><a href="#下载SDK" class="headerlink" title="下载SDK"></a>下载SDK</h3><p>clone这个仓库，也就是下载这个仓库的代码：<a href="https://github.com/raspberrypi/pico-sdk">https://github.com/raspberrypi/pico-sdk</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/raspberrypi/pico-sdk</span><br></pre></td></tr></table></figure>
<h3 id="下载示例代码"><a href="#下载示例代码" class="headerlink" title="下载示例代码"></a>下载示例代码</h3><p>clone这个仓库，也就是下载这个仓库的代码：<a href="https://github.com/raspberrypi/pico-examples">https://github.com/raspberrypi/pico-examples</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/raspberrypi/pico-examples</span><br></pre></td></tr></table></figure>
<h3 id="下载安装gcc-arm-none-eabi"><a href="#下载安装gcc-arm-none-eabi" class="headerlink" title="下载安装gcc-arm-none-eabi"></a>下载安装gcc-arm-none-eabi</h3><p>下载链接在这个网站里：<a href="https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads">https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads</a></p>
<p>win10选这个即可：</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E4%B8%8B%E8%BD%BDgcc-arm.png" alt="下载gcc-arm" style="zoom:50%;" />

<p>安装，<strong>注意记住安装位置</strong></p>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="CLion"><a href="#CLion" class="headerlink" title="CLion"></a>CLion</h3><p>在CLion中打开示例代码项目文件夹 <code>pico-examples</code></p>
<p>进入设置，找到CMake</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/CMake%E8%AE%BE%E7%BD%AE.png" alt="CMake设置" style="zoom:67%;" />

<p>配置环境</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="配置环境变量" style="zoom: 67%;" />

<p>加入两个：</p>
<ul>
<li><code>PICO_SDK_PATH</code> ：值为你下载的pico sdk的目录</li>
<li><code>PICO_TOOLCHAIN_PATH</code> ：安装gcc-arm-none-eabi的目录下的bin目录</li>
</ul>
<p>配置完成！</p>
<h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><p>打开<strong>Visual Studio **的 **Developer Command Prompt</strong> 命令行，<strong>cmd不行的</strong></p>
<p>输入 <code>code</code> 打开VSCode，<strong>必须这样打开！</strong></p>
<p>然后安装cmake tools插件，重启VSCode，<strong>依然是从 Developer Command Prompt 命令行打开VSCode！</strong></p>
<p>打开设置：</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/VSCode%E8%AE%BE%E7%BD%AE.png" alt="VSCode设置" style="zoom: 67%;" />

<p>选择拓展 - CMake Tools Configuration - Configure Environment - 添加项</p>
<p><img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E9%85%8D%E7%BD%AECMake.png" alt="配置CMake"></p>
<p>加入两个：</p>
<ul>
<li><code>PICO_SDK_PATH</code> ：值为你下载的pico sdk的目录</li>
<li><code>PICO_TOOLCHAIN_PATH</code> ：安装gcc-arm-none-eabi的目录下的bin目录</li>
</ul>
<p>例如我的是：</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/VSCode%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="环境变量" style="zoom:80%;" />

<p>再选择拓展 - CMake Tools Configuration - Generator，设置值为 <code>NMake Makefiles</code></p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E9%85%8D%E7%BD%AECMake2.png" alt="配置CMake2" style="zoom:67%;" />

<p>关闭设置，打开示例代码文件夹，右下角出现是否配置项目，点 ”是“。然后提示配置项目，选择 <code>GCC for arm-none-eabi</code></p>
<p><img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/VSCode%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE.png" alt="配置项目"></p>
<p>配置完成！</p>
<h2 id="点亮板载LED-1"><a href="#点亮板载LED-1" class="headerlink" title="点亮板载LED"></a>点亮板载LED</h2><p>以CLion为例，打开示例代码下的 <code>blink</code> 下的 <code>blink.c</code> ，点击构建：</p>
<img src="https://tc.skyone.host/blog/post/Win10%E4%B8%8B%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEPico%E7%9A%84MicroPython%E4%B8%8EC%E7%8E%AF%E5%A2%83/%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE.png" alt="构建项目" style="zoom:45%;" />

<p>构建完成后，在 <code>cmake-build-debug/blink/elf2uf2</code> 目录下可以找到 <code>blink.uf2</code> 文件，这即时编译后的需要烧录的文件</p>
<p>按住pico上的按钮，使用USB线连接电脑后松开按钮，将 <code>blink.uf2</code> 拖进去。</p>
<p>OK，pico自动重启，LED已经亮了！</p>
<blockquote>
<p>你是不是已经意识到了，没错，MicroPython的固件也是 <code>.uf2</code> 后缀，说明MicroPython也是用C写出来、编译好的。</p>
</blockquote>
]]></content>
      <categories>
        <category>原创教程</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式初探</title>
    <url>/2021/02/20/she-ji-mo-shi-chu-tan/</url>
    <content><![CDATA[<h1 id="设计模式是什么？"><a href="#设计模式是什么？" class="headerlink" title="设计模式是什么？"></a>设计模式是什么？</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><strong>设计模式</strong>是软件设计中常见问题的典型解决方案。就像建造建筑前绘制的蓝图一样，你需要确定最终的结果和模式的功能， 而不是实现具体步骤。</p>
<p>通常情况下，模式包含以下内容：</p>
<ul>
<li><strong>意图</strong>：即目的，简单描述问题和解决方案。</li>
<li><strong>动机</strong>：进一步解释问题并说明模式会如何提供解决方案。</li>
<li><strong>结构</strong>：展示模式的每个部分和它们之间的关系。</li>
</ul>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>设计模式主要分为：</p>
<ul>
<li><strong>创建型模式</strong>：提供创建对象的机制， 通常用于增加已有代码的灵活性和可复用性。</li>
<li><strong>结构型模式</strong>：介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。</li>
<li><strong>行为模式</strong>：负责对象间的高效沟通和职责委派。</li>
<li><strong>J2EE 模式</strong>：该设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</li>
</ul>
<p>详细表格如下（来自<a href="https://www.runoob.com/design-pattern/design-pattern-intro.html">菜鸟教程</a>）：</p>
<table>
<thead>
<tr>
<th align="left">模式</th>
<th align="left">描述</th>
<th align="left">包括</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>创建型模式</strong></td>
<td align="left">该类模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。</td>
<td align="left">工厂模式（Factory Pattern）抽象工厂模式（Abstract Factory Pattern）单例模式（Singleton Pattern）建造者模式（Builder Pattern）原型模式（Prototype Pattern）</td>
</tr>
<tr>
<td align="left"><strong>结构型模式</strong></td>
<td align="left">这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。</td>
<td align="left">适配器模式（Adapter Pattern）桥接模式（Bridge Pattern）过滤器模式（Filter、Criteria Pattern）组合模式（Composite Pattern）装饰器模式（Decorator Pattern）外观模式（Facade Pattern）享元模式（Flyweight Pattern）代理模式（Proxy Pattern）</td>
</tr>
<tr>
<td align="left"><strong>行为型模式</strong></td>
<td align="left">这些设计模式特别关注对象之间的通信。</td>
<td align="left">责任链模式（Chain of Responsibility Pattern）命令模式（Command Pattern）解释器模式（Interpreter Pattern）迭代器模式（Iterator Pattern）中介者模式（Mediator Pattern）备忘录模式（Memento Pattern）观察者模式（Observer Pattern）状态模式（State Pattern）空对象模式（Null Object Pattern）策略模式（Strategy Pattern）模板模式（Template Pattern）访问者模式（Visitor Pattern）</td>
</tr>
<tr>
<td align="left"><strong>J2EE 模式</strong></td>
<td align="left">这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</td>
<td align="left">MVC 模式（MVC Pattern）业务代表模式（Business Delegate Pattern）组合实体模式（Composite Entity Pattern）数据访问对象模式（Data Access Object Pattern）前端控制器模式（Front Controller Pattern）拦截过滤器模式（Intercepting Filter Pattern）服务定位器模式（Service Locator Pattern）传输对象模式（Transfer Object Pattern）</td>
</tr>
</tbody></table>
<h1 id="设计模式六大原则"><a href="#设计模式六大原则" class="headerlink" title="设计模式六大原则"></a>设计模式六大原则</h1><h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><p><strong>开闭原则（Open Close Principle）</strong>的意思是：<strong>对扩展开放，对修改关闭</strong>。在程序需要进行拓展的时候，不需要修改原有的代码。目的是为了使程序的扩展性好，易于维护和升级。</p>
<h2 id="里氏代换原则"><a href="#里氏代换原则" class="headerlink" title="里氏代换原则"></a>里氏代换原则</h2><p><strong>里氏代换原则（Liskov Substitution Principle）</strong>是面向对象设计的基本原则之一。 里氏代换原则中说，<strong>任何基类可以出现的地方，子类一定可以出现</strong>。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p>
<h2 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h2><p><strong>依赖倒转原则（Dependence Inversion Principle）</strong>是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。</p>
<h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p><strong>接口隔离原则（Interface Segregation Principle）</strong>的意思是：<strong>使用多个隔离的接口，比使用单个接口要好</strong>。简而言之：尽量降低耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p>
<h2 id="迪米特法则"><a href="#迪米特法则" class="headerlink" title="迪米特法则"></a>迪米特法则</h2><p><strong>迪米特法则（Demeter Principle）</strong>又称最少知道原则。最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p>
<h2 id="合成复用原则"><a href="#合成复用原则" class="headerlink" title="合成复用原则"></a>合成复用原则</h2><p><strong>合成复用原则（Composite Reuse Principle）</strong>是指：尽量使用合成/聚合的方式，而不是使用继承。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>一个简单的神经网络框架</title>
    <url>/2020/11/14/yi-ge-jian-dan-de-shen-jing-wang-luo-kuang-jia/</url>
    <content><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>这是一个基于python的最简单的神经网络框架，使用了<code>numpy</code>库，使用的是输入层 - 隐藏层 - 输出层的结构，每一层的节点数自可定义。原理图：</p>
<p><img src="https://tc.skyone.host/blog/post/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.png" alt="原理图"></p>
<p>激活函数是经典的：</p>
<p><img src="https://tc-1.oss-cn-hangzhou.aliyuncs.com/blog/post/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0.png" alt="激活函数"></p>
<p>误差函数的斜率：</p>
<p><img src="https://tc-1.oss-cn-hangzhou.aliyuncs.com/blog/post/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/%E8%AF%AF%E5%B7%AE%E5%87%BD%E6%95%B0.png" alt="误差函数"></p>
<p>使用矩阵简化运算：</p>
<p><img src="https://tc-1.oss-cn-hangzhou.aliyuncs.com/blog/post/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97.png" alt="矩阵运算"></p>
<p>代码很短、很简单，但效果却还不错。</p>
<p>输入层、隐藏层、输出层节点数分别784、100、10个，经过<code>MNIST手写数字数据集</code>的训练后，跑了10000个测试，手写数字识别准确率达到了95%左右。</p>
<p><img src="https://tc.skyone.host/blog/post/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/%E8%AF%86%E5%88%AB%E5%87%86%E7%A1%AE%E7%8E%87.png" alt="识别准确率"></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">activate</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + numpy.exp(-x))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NeuralNetwork</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, inputnodes, hiddennodes, outputnodes, learningrate=<span class="number">0.3</span></span>):</span></span><br><span class="line">        <span class="comment"># set number of nodes in each input, hidden, output layer</span></span><br><span class="line">        <span class="comment"># 分别是：输入层、隐藏层、输出层的节点数</span></span><br><span class="line">        self.inodes = inputnodes</span><br><span class="line">        self.hnodes = hiddennodes</span><br><span class="line">        self.onodes = outputnodes</span><br><span class="line"></span><br><span class="line">        <span class="comment"># learning rate</span></span><br><span class="line">        <span class="comment"># 学习速率</span></span><br><span class="line">        self.lr = learningrate</span><br><span class="line"></span><br><span class="line">        <span class="comment"># weights</span></span><br><span class="line">        <span class="comment"># 使用正态分布初始化权重</span></span><br><span class="line">        self.wih = numpy.random.normal(<span class="number">0.0</span>, <span class="built_in">pow</span>(self.inodes, -<span class="number">0.5</span>), (self.hnodes, self.inodes))</span><br><span class="line">        self.who = numpy.random.normal(<span class="number">0.0</span>, <span class="built_in">pow</span>(self.hnodes, -<span class="number">0.5</span>), (self.onodes, self.hnodes))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">query</span>(<span class="params">self, inputs_list</span>):</span></span><br><span class="line">        <span class="comment"># 计算每个数字的概率</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 翻转矩阵</span></span><br><span class="line">        inputs = numpy.array(inputs_list, ndmin=<span class="number">2</span>).T</span><br><span class="line">		<span class="comment"># 输入进隐藏层的数据与权重相乘</span></span><br><span class="line">        hidden_inputs = numpy.dot(self.wih, inputs)</span><br><span class="line">        <span class="comment"># 激活函数</span></span><br><span class="line">        hidden_outputs = activate(hidden_inputs)</span><br><span class="line">		<span class="comment"># 输入进输出层的数据与权重相乘</span></span><br><span class="line">        final_inputs = numpy.dot(self.who, hidden_outputs)</span><br><span class="line">        <span class="comment"># 激活函数</span></span><br><span class="line">        final_outputs = activate(final_inputs)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> final_outputs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self, inputs_list, targets_list</span>):</span></span><br><span class="line">        <span class="comment"># 误差计算函数</span></span><br><span class="line">        inputs = numpy.array(inputs_list, ndmin=<span class="number">2</span>).T</span><br><span class="line">        targets = numpy.array(targets_list, ndmin=<span class="number">2</span>).T</span><br><span class="line"></span><br><span class="line">        hidden_inputs = numpy.dot(self.wih, inputs)</span><br><span class="line">        hidden_outputs = activate(hidden_inputs)</span><br><span class="line"></span><br><span class="line">        final_inputs = numpy.dot(self.who, hidden_outputs)</span><br><span class="line">        final_outputs = activate(final_inputs)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># errors</span></span><br><span class="line">        <span class="comment"># 误差值</span></span><br><span class="line">        output_errors = targets - final_outputs</span><br><span class="line">        hidden_errors = numpy.dot(self.who.T, output_errors)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># update the weights for the links between the hidden and output layer</span></span><br><span class="line">        <span class="comment"># 根据误差调整权重</span></span><br><span class="line">        self.who += self.lr * numpy.dot((output_errors * final_outputs * (<span class="number">1.0</span> - final_outputs)), numpy.transpose(hidden_outputs))</span><br><span class="line">        <span class="comment"># update the weights for the links between the hidden and output layer</span></span><br><span class="line">        <span class="comment"># 根据误差调整权重</span></span><br><span class="line">        self.wih += self.lr * numpy.dot((hidden_errors * hidden_outputs * (<span class="number">1.0</span> - hidden_outputs)), numpy.transpose(inputs))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>神经网络</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>神经网络</tag>
      </tags>
  </entry>
  <entry>
    <title>课程表爬虫-已弃坑</title>
    <url>/2020/10/29/ke-cheng-biao-pa-chong-yi-qi-keng/</url>
    <content><![CDATA[<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ol>
<li><strong>总体思路</strong></li>
<li><strong>网站分析</strong><ol>
<li><strong>登录web系统</strong></li>
<li><strong>登录教务系统</strong></li>
<li><strong>获取课表</strong></li>
</ol>
</li>
<li><strong>开始写代码</strong></li>
</ol>
<h2 id="1-总体思路"><a href="#1-总体思路" class="headerlink" title="1.总体思路"></a>1.总体思路</h2><p>由于查合工大课表需要连接校园网，要实现随时随地爬取课表需要借助学校提供的web***系统。</p>
<p>因此这个爬虫需要两次模拟登录。</p>
<p>第一次是登录<a href="https://webvpn.hfut.edu.cn/login">web***</a></p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/web1.png" alt="web1"></p>
<p>第二次是通过web***打开教务系统学生端</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/web2.png" alt="web2"></p>
<h2 id="2-网站分析"><a href="#2-网站分析" class="headerlink" title="2.网站分析"></a>2.网站分析</h2><h3 id="登录web系统"><a href="#登录web系统" class="headerlink" title="登录web系统"></a>登录web系统</h3><p>首先用浏览器抓包</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/s1.png" alt="s1"></p>
<p>do-login是一个post请求，data段很简单，用户名和密码都没有加密，但在此之前需要先获取一个captcha_id，直接请求就行了</p>
<p>后面的info是一个get请求，很明显用于获取信息，禁止JavaScript再打开网页，果然，这个网页是JavaScript动态加载的，info就是用于获取信息，还是不放心？再翻一翻JavaScript，很容易就找到了这个</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/s2.png" alt="s2"></p>
<p>这下没错了，由于教务系统网址每次都不一样，我们想要通过web***打开它只能通过发送一个叫</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">info?_&#x3D;xxxxxxxx</span><br></pre></td></tr></table></figure>
<p> 的get请求获取网址，等于号后面一眼就能看出来是<strong>时间戳</strong></p>
<h3 id="登录教务系统"><a href="#登录教务系统" class="headerlink" title="登录教务系统"></a>登录教务系统</h3><p>由于web***系统暂时抽风，先连校园网测试</p>
<p>依然先抓包</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/j1.png" alt="j1"></p>
<p>这就有点意思了，先get了一个login-salt，再post登录用的login，而且login的数据段的密码加密了！</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/j2.png" alt="j2"></p>
<p>只能调试JavaScript了。。。</p>
<p>经过一番寻找，终于在</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/j3.png" alt="j3"></p>
<p>找到了加密方式：先get一个”盐“，连到密码前面，再用SHA1算法加密</p>
<p>其实也不算复复杂，毕竟python自带所有hash算法(在hashlib)里，就算没有，也可以把Google的sha1.js复制过来用python调用</p>
<h3 id="获取课表"><a href="#获取课表" class="headerlink" title="获取课表"></a>获取课表</h3><p>抓包抓包~~~</p>
<p>发现两个特别的请求：</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/get1.png" alt="get1"></p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/get2.png" alt="get"></p>
<p>第一个用于获取加载网页的js，第二个是json信息</p>
<p>我们只需要那个json信息，直接分析并打开网址即可</p>
<p>打开网页，抓包</p>
<p><img src="https://tc.skyone.host/blog/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E7%88%AC%E8%99%AB-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/get3.png" alt="get3"></p>
<p>很简单，看来上面那个网页不用请求，直接获取这个get-data即可，参数就是时间</p>
<p>至此，分析完成</p>
<h2 id="3-开始写代码"><a href="#3-开始写代码" class="headerlink" title="3.开始写代码"></a>3.开始写代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> html</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">normal_headers = &#123;</span><br><span class="line">    <span class="string">r&quot;User-Agent&quot;</span>: <span class="string">r&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &quot;</span></span><br><span class="line">                   <span class="string">r&quot;Chrome/86.0.4240.111 Safari/537.36 Edg/86.0.622.56 &quot;</span></span><br><span class="line">&#125;</span><br><span class="line">VPN1_headers = &#123;</span><br><span class="line">    <span class="string">r&quot;Accept&quot;</span>: <span class="string">r&#x27;*/*&#x27;</span>,</span><br><span class="line">    <span class="string">r&quot;Accept-Encoding&quot;</span>: <span class="string">r&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Content-Type&quot;</span>: <span class="string">r&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;User-Agent&quot;</span>: <span class="string">r&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &quot;</span></span><br><span class="line">                   <span class="string">r&quot;Chrome/86.0.4240.111 Safari/537.36 Edg/86.0.622.56 &quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Cookie&quot;</span>: <span class="string">r&quot;show_vpn=1; wengine_vpn_ticketwebvpn_hfut_edu_cn=783a9268eeff4127; remember_token=&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Host&quot;</span>: <span class="string">r&quot;webvpn.hfut.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Origin&quot;</span>: <span class="string">r&quot;https://webvpn.hfut.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Referer&quot;</span>: <span class="string">r&quot;https://webvpn.hfut.edu.cn/login&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">r&quot;empty&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">r&quot;cors&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Site&quot;</span>: <span class="string">r&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;X-Requested-With&quot;</span>: <span class="string">r&quot;XMLHttpRequest&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">VPN2_headers = &#123;</span><br><span class="line">    <span class="string">r&quot;Accept&quot;</span>: <span class="string">r&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,&quot;</span></span><br><span class="line">               <span class="string">r&quot;application/signed-exchange;v=b3;q=0.9&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Accept-Encoding&quot;</span>: <span class="string">r&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;User-Agent&quot;</span>: <span class="string">r&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &quot;</span></span><br><span class="line">                   <span class="string">r&quot;Chrome/86.0.4240.111 Safari/537.36 Edg/86.0.622.56 &quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Cookie&quot;</span>: <span class="string">r&quot;show_vpn=1; wengine_vpn_ticketwebvpn_hfut_edu_cn=783a9268eeff4127; remember_token=&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Host&quot;</span>: <span class="string">r&quot;webvpn.hfut.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Referer&quot;</span>: <span class="string">r&quot;https://webvpn.hfut.edu.cn/login&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">r&quot;document&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">r&quot;navigate&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Site&quot;</span>: <span class="string">r&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-User&quot;</span>: <span class="string">r&quot;?1&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">VPN3_headers = &#123;</span><br><span class="line">    <span class="string">r&quot;Accept&quot;</span>: <span class="string">r&#x27;application/json, text/javascript, */*; q=0.01&#x27;</span>,</span><br><span class="line">    <span class="string">r&quot;Accept-Encoding&quot;</span>: <span class="string">r&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;User-Agent&quot;</span>: <span class="string">r&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &quot;</span></span><br><span class="line">                   <span class="string">r&quot;Chrome/86.0.4240.111 Safari/537.36 Edg/86.0.622.56 &quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Cookie&quot;</span>: <span class="string">r&quot;show_vpn=1; wengine_vpn_ticketwebvpn_hfut_edu_cn=783a9268eeff4127; remember_token=&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Host&quot;</span>: <span class="string">r&quot;webvpn.hfut.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Referer&quot;</span>: <span class="string">r&quot;https://webvpn.hfut.edu.cn/&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">r&quot;empty&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">r&quot;cors&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;Sec-Fetch-Site&quot;</span>: <span class="string">r&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">r&quot;X-Requested-With&quot;</span>: <span class="string">r&quot;XMLHttpRequest&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">VPN_url = <span class="string">r&#x27;https://webvpn.hfut.edu.cn/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_captcha_id</span>(<span class="params">page</span>):</span></span><br><span class="line">    xpath = <span class="string">r&#x27;//*[@id=&quot;captcha-wrap&quot;]/div/div/input/@value&#x27;</span></span><br><span class="line">    page.encoding = page.apparent_encoding</span><br><span class="line">    selector = html.fromstring(page.text)</span><br><span class="line">    <span class="keyword">return</span> selector.xpath(xpath)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VPN_session = requests.Session()</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">r&#x27;auth_type&#x27;</span>: <span class="string">r&#x27;local&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;username&#x27;</span>: <span class="string">r&#x27;填用户名&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;sms_code&#x27;</span>: <span class="string">r&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;password&#x27;</span>: <span class="string">r&#x27;填密码&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;captcha&#x27;</span>: <span class="string">r&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;needCaptcha&#x27;</span>: <span class="string">r&#x27;false&#x27;</span>,</span><br><span class="line">    <span class="string">r&#x27;captcha_id&#x27;</span>: get_captcha_id(VPN_session.get(<span class="string">r&#x27;https://webvpn.hfut.edu.cn/login&#x27;</span>, headers=normal_headers))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res0 = VPN_session.post(VPN_url + <span class="string">r&#x27;do-login&#x27;</span>, headers=VPN1_headers, data=data)</span><br><span class="line">res1 = VPN_session.get(VPN_url, headers=VPN2_headers)</span><br><span class="line">res2 = VPN_session.get(VPN_url + <span class="string">r&#x27;user/info?_=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time.time() * <span class="number">1000</span>)), headers=VPN3_headers)</span><br><span class="line">print(res1)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="已弃坑"><a href="#已弃坑" class="headerlink" title="已弃坑"></a>已弃坑</h3><p>由于需求改变，现已经改用node.js实现，并已经完成绝大部分。</p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>用Arduino制作一个简易超声波测距仪</title>
    <url>/2021/02/22/yong-arduino-zhi-zuo-yi-ge-jian-yi-chao-sheng-bo-ce-ju-yi/</url>
    <content><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>用Arduino UNO开发板做一个简单的超声波测距仪</p>
<img src="https://tc.skyone.host/blog/post/%E7%94%A8Arduino%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E4%BB%AA/%E6%88%90%E6%9E%9C.jpg" alt="成果" style="zoom: 33%;" />

<h1 id="材料准备"><a href="#材料准备" class="headerlink" title="材料准备"></a>材料准备</h1><table>
<thead>
<tr>
<th>材料</th>
<th>数量</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Arduino Uno</strong>或其他类似开发板及其配套<strong>数据线</strong></td>
<td>1个</td>
</tr>
<tr>
<td><strong>杜邦线</strong></td>
<td>若干</td>
</tr>
<tr>
<td><strong>超声波测距模块</strong>(HC-SR04)</td>
<td>1个</td>
</tr>
<tr>
<td><strong>四位数码管</strong></td>
<td>1个</td>
</tr>
<tr>
<td><strong>电阻</strong></td>
<td>若干</td>
</tr>
</tbody></table>
<p>括号里的是我自己使用的型号；当然，你还需要一台装有<strong>Arduino IDE</strong>的电脑。</p>
<h1 id="Arduino基础"><a href="#Arduino基础" class="headerlink" title="Arduino基础"></a>Arduino基础</h1><p>了解过Arduino的请跳过~~</p>
<h2 id="Arduino怎么用？"><a href="#Arduino怎么用？" class="headerlink" title="Arduino怎么用？"></a>Arduino怎么用？</h2><p>如你所见，Arduino上有很多插孔，这个叫 <code>I/O</code> ，我们要做的就是通过 <code>C++</code> 程序控制I/O的读取和输出。</p>
<h2 id="这个C-程序怎么写？"><a href="#这个C-程序怎么写？" class="headerlink" title="这个C++程序怎么写？"></a>这个C++程序怎么写？</h2><blockquote>
<p> 什么？你不会C++？快去<a href="https://www.runoob.com/cplusplus/cpp-tutorial.html">这里</a>学习吧。。。</p>
</blockquote>
<p>Arduino程序必须包含两个函数： <code>setup()</code> 和 <code>loop()</code></p>
<p>这两个函数简单来说就是先执行 <code>setup()</code> 函数初始化，在无限循环 <code>loop()</code> 函数</p>
<p>咳咳，还是这么解释吧：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    setup();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(;;) &#123;</span><br><span class="line">        loop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="超声波测距模块"><a href="#超声波测距模块" class="headerlink" title="超声波测距模块"></a>超声波测距模块</h1><h2 id="分析工作原理"><a href="#分析工作原理" class="headerlink" title="分析工作原理"></a>分析工作原理</h2><p>由于各个型号的模块针脚可能不同，请查看相关文档，这里我根据我使用的<strong>HC-SR04</strong>介绍。</p>
<img src="https://tc.skyone.host/blog/post/%E7%94%A8Arduino%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E4%BB%AA/HC-SR04.jpg" alt="HC-SR04" style="zoom: 25%;" />

<blockquote>
<p>采用IO触发测距，给至少10us的高电平信号。模块自动发送8个40khz的方波，自动检测是否有信号返回。有信号返回，通过IO输出一高电平，高电平持续的时间就是超声波从发射到返回的时间。测试距离=(高电平时间*声速(340m/s))/2</p>
<img src="https://tc.skyone.host/blog/post/%E7%94%A8Arduino%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E4%BB%AA/HC-SR04%E6%96%87%E6%A1%A3.png" alt="文档" style="zoom:50%;" />
</blockquote>
<h2 id="一个完整的测距过程"><a href="#一个完整的测距过程" class="headerlink" title="一个完整的测距过程"></a>一个完整的测距过程</h2><ol start="0">
<li><code>GND</code> 接Arduino的 <code>GND</code> ， <code>VCC</code> 接Arduino的 <code>5V</code></li>
</ol>
<p>下面开始测距：</p>
<ol>
<li>给 <code>Trig</code> 一个至少10微秒的脉冲</li>
<li>监听输出端口并开始计时</li>
<li>当输出端口出现高电平时计时结束</li>
<li>根据声速计算距离</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>首先，为了接线方便，超声波测距模块连Arduino的 <code>A2</code> ~ <code>A5</code> 引脚。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GND A2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ECHO A3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRIG A4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VCC A5</span></span><br></pre></td></tr></table></figure>


<p>在 <code>setup()</code> 函数里我们初始化引脚</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// …………</span></span><br><span class="line">    pinMode(GND, OUTPUT);	<span class="comment">// 输出 0V 电压</span></span><br><span class="line">    pinMode(VCC, OUTPUT);	<span class="comment">// 输出 5V 电压</span></span><br><span class="line">    pinMode(TRIG, OUTPUT);	<span class="comment">// 输出 控制信号</span></span><br><span class="line">    pinMOde(ECHO, INPUT);	<span class="comment">// 输入端</span></span><br><span class="line">    <span class="comment">// …………</span></span><br><span class="line">    digitalWrite(VCC, HIGH); <span class="comment">// VCC 5V 高电平</span></span><br><span class="line">    digitalWrite(GND, LOW); <span class="comment">// GND 低电平</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还记得上面的步骤吗？</p>
<p>在 <code>loop()</code> 里我们先将 <code>Trig</code> 设为高电平( <code>digitalWrite(TRIG, HIGH);</code> )，50微秒后变回低电平，也就是形成一个50微秒的脉冲</p>
<p>再调用Arduino库函数 <code>pulseln()</code> ，这个函数等待一个端口变为高电平并开始计时，再变为低电平时停止计时，并返回时间间隔（单位为微秒）</p>
<p>最后计算距离</p>
<p>代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(TRIG, HIGH);	<span class="comment">// 先将 `Trig` 设为高电平</span></span><br><span class="line">    delayMicroseconds(<span class="number">50</span>);		<span class="comment">// 等待 50 微秒</span></span><br><span class="line">    digitalWrite(TRIG, LOW);	<span class="comment">// 先将 `Trig` 设为低电平</span></span><br><span class="line">    <span class="keyword">double</span> time = <span class="keyword">double</span>(pulseIn(ECHO, HIGH)) / <span class="number">1000000</span>;	<span class="comment">// 保存以秒为单位的时间间隔</span></span><br><span class="line">    </span><br><span class="line">    show(time * <span class="number">340</span> / <span class="number">2</span>);		<span class="comment">// 将计算结果传递给 `show()` 函数，这个函数的实现在后面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="四位数码管"><a href="#四位数码管" class="headerlink" title="四位数码管"></a>四位数码管</h1><h2 id="分析工作原理-1"><a href="#分析工作原理-1" class="headerlink" title="分析工作原理"></a>分析工作原理</h2><p>我用的是共阴数码管，原理图如下：</p>
<img src="https://tc.skyone.host/blog/post/%E7%94%A8Arduino%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E4%BB%AA/%E6%95%B0%E7%A0%81%E7%AE%A1.png" alt="数码管原理图" style="zoom:50%;" />

<p>可以看到，当12低电平时，其他引脚控制第一个数字，当9为低电平时，其他引脚控制第一个数字，以此类推。</p>
<p><strong>注意！要在 12 , 9 , 8 , 6 四个引脚分别串联一个合适阻值的电阻，具体阻值要看数码管的工作电压。</strong></p>
<p>如下表：</p>
<table>
<thead>
<tr>
<th>数字</th>
<th>高电平的引脚</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>ABCDEF</td>
</tr>
<tr>
<td>1</td>
<td>BC</td>
</tr>
<tr>
<td>2</td>
<td>ABDEG</td>
</tr>
<tr>
<td>3</td>
<td>ABCDG</td>
</tr>
<tr>
<td>4</td>
<td>BCFG</td>
</tr>
<tr>
<td>5</td>
<td>ACDFG</td>
</tr>
<tr>
<td>6</td>
<td>ACDEFG</td>
</tr>
<tr>
<td>7</td>
<td>ABC</td>
</tr>
<tr>
<td>8</td>
<td>ABCDEFG</td>
</tr>
<tr>
<td>9</td>
<td>ABCDFG</td>
</tr>
</tbody></table>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>为了用字母而不是数字表示引脚，可以在程序的开头定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l1 13 <span class="comment">// Arduino 的 13 号引脚 连数码管的 12 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l2 12 <span class="comment">// Arduino 的 12 号引脚 连数码管的  9 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l3 11 <span class="comment">// Arduino 的 11 号引脚 连数码管的  8 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l4 2  <span class="comment">// Arduino 的  2 号引脚 连数码管的  6 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> la 10 <span class="comment">// Arduino 的 10 号引脚 连数码管的 11 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lb 8  <span class="comment">// Arduino 的  8 号引脚 连数码管的  7 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lc 4  <span class="comment">// Arduino 的  4 号引脚 连数码管的  4 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ld 6  <span class="comment">// Arduino 的  6 号引脚 连数码管的  2 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> le 7  <span class="comment">// Arduino 的  7 号引脚 连数码管的  1 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lf 9  <span class="comment">// Arduino 的  9 号引脚 连数码管的 10 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg 3  <span class="comment">// Arduino 的  3 号引脚 连数码管的  5 号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ldp 5 <span class="comment">// Arduino 的  5 号引脚 连数码管的  3 号引脚</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY 5 <span class="comment">// 用于控制每次测量的间隔</span></span></span><br></pre></td></tr></table></figure>
<p><strong>初始化引脚</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">14</span>; i++) &#123;</span><br><span class="line">        pinMode(i, OUTPUT);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// …………</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>封装每个数字为函数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(la, LOW);</span><br><span class="line">    digitalWrite(lb, LOW);</span><br><span class="line">    digitalWrite(lc, LOW);</span><br><span class="line">    digitalWrite(ld, LOW);</span><br><span class="line">    digitalWrite(le, LOW);</span><br><span class="line">    digitalWrite(lf, LOW);</span><br><span class="line">    digitalWrite(lg, LOW);</span><br><span class="line">    digitalWrite(ldp, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_num</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (num) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            _show_0();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            _show_1();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            _show_2();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            _show_3();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            _show_4();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            _show_5();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            _show_6();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            _show_7();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            _show_8();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            _show_9();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_0() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_1() &#123;</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_2() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_3() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_4() &#123;</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_5() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_6() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_7() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_8() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_9() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意！</strong></p>
<p>我们要显示的是XX.XX米，其中第二个小数点要正确显示，我们写一个函数，接受一个小于10000的正整数，如344，显示为03.44(米)。<strong>所以前面调用 <code>show()</code> 的时候传入的参数应该乘100</strong>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一次测量结果显示 300 / DELAY 秒。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">300</span> / DELAY; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = num;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l4, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l4, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l3, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l3, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(ldp, HIGH);</span><br><span class="line">        digitalWrite(l2, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l2, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l1, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l1, HIGH);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l1 13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l2 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l3 11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l4 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> la 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lb 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lc 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ld 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> le 7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lf 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ldp 5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GND A2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ECHO A3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRIG A4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VCC A5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">14</span>; i++) &#123;</span><br><span class="line">        pinMode(i, OUTPUT);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    pinMode(GND, OUTPUT);</span><br><span class="line">    pinMode(VCC, OUTPUT);</span><br><span class="line">    pinMode(TRIG, OUTPUT);</span><br><span class="line">    pinMOde(ECHO, INPUT);</span><br><span class="line"></span><br><span class="line">    digitalWrite(VCC, HIGH);</span><br><span class="line">    digitalWrite(GND, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(TRIG, LOW);</span><br><span class="line">    delayMicroseconds(<span class="number">5</span>);</span><br><span class="line">    digitalWrite(TRIG, HIGH);</span><br><span class="line">    delayMicroseconds(<span class="number">50</span>);</span><br><span class="line">    digitalWrite(TRIG, LOW);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> time = <span class="keyword">double</span>(pulseIn(ECHO, HIGH)) / <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">    show(<span class="keyword">int</span>(time * <span class="number">340</span> / <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">300</span> / DELAY; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = num;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l4, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l4, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l3, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l3, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(ldp, HIGH);</span><br><span class="line">        digitalWrite(l2, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l2, HIGH);</span><br><span class="line">        tmp -= j;</span><br><span class="line">        tmp /= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        flush();</span><br><span class="line">        j = tmp % <span class="number">10</span>;</span><br><span class="line">        show_num(j);</span><br><span class="line">        digitalWrite(l1, LOW);</span><br><span class="line">        delay(DELAY);</span><br><span class="line">        digitalWrite(l1, HIGH);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(la, LOW);</span><br><span class="line">    digitalWrite(lb, LOW);</span><br><span class="line">    digitalWrite(lc, LOW);</span><br><span class="line">    digitalWrite(ld, LOW);</span><br><span class="line">    digitalWrite(le, LOW);</span><br><span class="line">    digitalWrite(lf, LOW);</span><br><span class="line">    digitalWrite(lg, LOW);</span><br><span class="line">    digitalWrite(ldp, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_num</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            _show_0();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            _show_1();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            _show_2();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            _show_3();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            _show_4();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            _show_5();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            _show_6();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            _show_7();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            _show_8();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            _show_9();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _show_1() &#123;</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_2() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_3() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_4() &#123;</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_5() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_6() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_7() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_8() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_9() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">    digitalWrite(lg, HIGH);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> _show_0() &#123;</span><br><span class="line">    digitalWrite(la, HIGH);</span><br><span class="line">    digitalWrite(lb, HIGH);</span><br><span class="line">    digitalWrite(lc, HIGH);</span><br><span class="line">    digitalWrite(ld, HIGH);</span><br><span class="line">    digitalWrite(le, HIGH);</span><br><span class="line">    digitalWrite(lf, HIGH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h1><p>前面其实都已经讲过了，这里再复述一遍：</p>
<table>
<thead>
<tr>
<th>Arduino引脚</th>
<th>四位数码管引脚</th>
<th>超声波测距仪引脚</th>
</tr>
</thead>
<tbody><tr>
<td>A2</td>
<td></td>
<td>GND</td>
</tr>
<tr>
<td>A3</td>
<td></td>
<td>ECHO</td>
</tr>
<tr>
<td>A4</td>
<td></td>
<td>TRIG</td>
</tr>
<tr>
<td>A5</td>
<td></td>
<td>VCC</td>
</tr>
<tr>
<td>3</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>4</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>7</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>11</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>8</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td>13</td>
<td>12</td>
<td></td>
</tr>
</tbody></table>
<h1 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h1><p>我已经成功了，你也快去试试吧~~</p>
<img src="https://tc.skyone.host/blog/post/%E7%94%A8Arduino%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E4%BB%AA/%E6%88%90%E6%9E%9C.jpg" alt="完成！" style="zoom: 33%;" />]]></content>
      <categories>
        <category>小制作</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Android学习笔记之activity间传递数据</title>
    <url>/2021/02/05/android-xue-xi-bi-ji-zhi-activity-jian-chuan-di-shu-ju/</url>
    <content><![CDATA[<h1 id="传递和接收数据的方法"><a href="#传递和接收数据的方法" class="headerlink" title="传递和接收数据的方法"></a>传递和接收数据的方法</h1><h2 id="Intent-类"><a href="#Intent-类" class="headerlink" title="Intent 类"></a><code>Intent</code> 类</h2><p>在Android中，使用 <code>Intent</code> 在不同 <code>activity</code> 间传递数据。</p>
<p><code>Intent</code> 类封装了下面6种信息：</p>
<ol>
<li>组件名称（<code>ComponentName</code>）</li>
<li>动作（<code>Action</code>）</li>
<li>种类（<code>Category</code>）</li>
<li>数据（<code>Data</code>）</li>
<li>附件信息（<code>Extra</code>）</li>
<li>标志（<code>Flag</code>）</li>
</ol>
<p><code>Data</code> 可以传递数据，但涉及到 <code>Intent</code> 的筛选机制比较复杂(还没学到)，这里，我使用 <code>Extra</code> 传递数据。</p>
<p>让我们声明一个 <code>Intent</code> 并写入数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, GetMessage.class);	<span class="comment">// GetMessage.class 表示数据接收者</span></span><br><span class="line">intent.putExtra(<span class="string">&quot;key&quot;</span>, value);	<span class="comment">// 键值对，key是字符串，value是任意Java内置数据类型</span></span><br></pre></td></tr></table></figure>
<h3 id="设置上下文"><a href="#设置上下文" class="headerlink" title="设置上下文"></a>设置上下文</h3><p>上面的代码第一行用于设置上下文( <code>context</code> )。第一个参数引用自身，用 <code>this</code> ；第二个参数引用目标类 (数据接收者)，注意，是对类的引用，不是对象。</p>
<p>你可以这样设置上下文：</p>
<ul>
<li>方法一</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, GetMessage.class);</span><br></pre></td></tr></table></figure>
<ul>
<li>方法二</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setClass(<span class="keyword">this</span>, GetMessage.class);</span><br></pre></td></tr></table></figure>
<ul>
<li>方法三</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setClassName(<span class="keyword">this</span>, <span class="string">&quot;host.skyone.intent.GetMessage&quot;</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>方法四</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setClassName(<span class="string">&quot;host.skyone.intent.MainActivity&quot;</span>, <span class="string">&quot;host.skyone.intent.GetMessage&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="设置数据"><a href="#设置数据" class="headerlink" title="设置数据"></a>设置数据</h3><p>设置数据使用 <code>intent.putExtra(String key, value)</code> 方法，<code>value</code> 可以说任意 <code>Java内置数据类型及其数组</code> 。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">intent.putExtra(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;skyone&quot;</span>);</span><br><span class="line">intent.putExtra(<span class="string">&quot;age&quot;</span>, <span class="number">19</span>);</span><br></pre></td></tr></table></figure>
<p>当然，你也可以使用 <code>intent.putExtras(Bundle data)</code> 方法并传入 <code>Bundle</code> 对象设置数据。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">bundle.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;skyone&quot;</span>);</span><br><span class="line">bundle.putInt(<span class="string">&quot;age&quot;</span>, <span class="number">19</span>);</span><br><span class="line">intent.putExtras(bundle);</span><br></pre></td></tr></table></figure>
<h2 id="传出数据"><a href="#传出数据" class="headerlink" title="传出数据"></a>传出数据</h2><p>想要打开一个 <code>activity</code> 并写入数据，只需要调用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">satrtActivity(intent);</span><br></pre></td></tr></table></figure>
<p>是不是很简单？</p>
<h2 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h2><p>从打开的新 <code>activity</code> 中接收数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">String name = intent.getStringExtra(<span class="string">&quot;name&quot;</span>); <span class="comment">// name = &quot;skyone&quot;</span></span><br><span class="line"><span class="keyword">int</span> age = intent.getIntExtra(<span class="string">&quot;age&quot;</span>); <span class="comment">// age = 19</span></span><br></pre></td></tr></table></figure>
<p>当然，使用 <code>bundle</code> 也是可以滴：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">Bundle bundle = intent.getExtras();</span><br><span class="line">String name = bundle.getString(<span class="string">&quot;name&quot;</span>); <span class="comment">// name = &quot;skyone&quot;</span></span><br><span class="line"><span class="keyword">int</span> age = bundle.getInt(<span class="string">&quot;age&quot;</span>); <span class="comment">// name = 19</span></span><br></pre></td></tr></table></figure>
<h2 id="返回数据"><a href="#返回数据" class="headerlink" title="返回数据"></a>返回数据</h2><p>从子Activity中返回数据，可以在子Activity中声明一个 <code>Intent</code> ，并传给 <code>setResult(int resultCode, Intent intent)</code> 。</p>
<p>例如，在 <code>ReturnMessage</code> 中返回数据到 <code>MainActivity</code> 。在 <code>ReturnMessage.java</code> 中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">intent.putExtra(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">setResult(<span class="number">52021</span>, intent);</span><br><span class="line">finish();</span><br></pre></td></tr></table></figure>
<p>在 <code>MainActivity</code> 中调用  <code>ReturnMessage</code> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">startActivityForResult(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, ReturnMessage.class), <span class="number">2021</span>); <span class="comment">// 2021 是RequestCode</span></span><br></pre></td></tr></table></figure>
<p>在 <code>MainActivity</code> 中接收数据通过重写 <code>onActivityResult(int requestCode, int resultCode, Intent data)</code> 实现，而 <code>requestCode</code> 和 <code>resultCode</code> 则用于判断是谁返回的数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="keyword">if</span> (requestCode == <span class="number">2021</span> &amp;&amp; resultCode == <span class="number">52021</span>) &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, </span><br><span class="line">                       <span class="string">&quot;接收到消息：&quot;</span> + data.getStringExtra(<span class="string">&quot;message&quot;</span>), </span><br><span class="line">                       Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><blockquote>
<p>示例的源代码在最后面，<code>Strings.xml</code> 在最最下面(本网站没有右侧滑块，点击<a href="#strings-xml">这里</a>或按住鼠标中键下拉比较快)</p>
</blockquote>
<h2 id="传出数据-1"><a href="#传出数据-1" class="headerlink" title="传出数据"></a>传出数据</h2><p>创建一个 <code>Empty Activity</code> ，包名我取名为 <code>host.skyone.intent</code>；</p>
<p>先画一个简单的页面，用到了两个按钮 <code>Button</code> ，一个输入框 <code>EditText</code> ，一个label <code>TextView</code> 。</p>
<p><code>activity_main.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tips2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;40dp&quot;</span><br><span class="line">        android:text=&quot;@string/TextView&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/edit_msg&quot;</span><br><span class="line">        android:layout_width=&quot;200dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:autofillHints=&quot;&quot;</span><br><span class="line">        android:hint=&quot;@string/hint&quot;</span><br><span class="line">        android:inputType=&quot;text&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/tips2&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/send_message&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;onSendMessage&quot;</span><br><span class="line">        android:text=&quot;@string/send_message&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/button&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_msg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/return_test&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_msg&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>再看 <code>MainActivity.java</code> 。<code>onCreate</code> 方法保存原样就好：</p>
<p><code>onCreate</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建一个按钮事件，用来读取文本框的值并传递给子Activity</p>
<p><code>onSendMessage</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSendMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    String message = ((EditText) findViewById(R.id.edit_msg)).getText().toString();</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, GetMessage.class);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">    startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里我们用需要创建新Empty Activity： <code>GetMessage</code> 。</p>
<p>好，<code>MainActivity.java</code>完成了，来到 <code>GetMessage</code> 。首先，依然先画个简单的界面：</p>
<p><code>activity_get_message.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.GetMessage&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tips&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/tips&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/showMessage&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/showMessage&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>GetMessage.java</code> 部分也没什么好说的，就是读取数据嘛，在第一节已经讲过了</p>
<p><code>GetMessage.java</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.intent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetMessage</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_get_message);</span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String message = intent.getStringExtra(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">        ((TextView)findViewById(R.id.showMessage)).setText(message); <span class="comment">// 找到View并显示数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>再次提醒， <code>Strings.xml</code> 在最下面</p>
</blockquote>
<h2 id="返回数据-1"><a href="#返回数据-1" class="headerlink" title="返回数据"></a>返回数据</h2><p>创建新Empty Activity： <code>ReturnMessage</code></p>
<p>在 <code>MainActivity</code> 中加入<code>onReturnMessageTest</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReturnMessageTest</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    startActivityForResult(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, ReturnMessage.class), <span class="number">2021</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>记得在 <code>activity_main.xml</code> 中第二个按钮中加入 <code>android:onClick=&quot;onReturnMessage&quot;</code></p>
<p>然后开始写  <code>ReturnMessage</code> ，同样，界面如下：</p>
<p><code>activity_return_message.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.ReturnMessage&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/edit_query&quot;</span><br><span class="line">        android:layout_width=&quot;200dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:autofillHints=&quot;Hello world!&quot;</span><br><span class="line">        android:hint=&quot;@string/hint&quot;</span><br><span class="line">        android:inputType=&quot;text&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/textView&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/return_message&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;onReturnMessage&quot;</span><br><span class="line">        android:text=&quot;@string/return_message&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_query&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;40dp&quot;</span><br><span class="line">        android:text=&quot;@string/TextView&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>按钮的事件函数如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReturnMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    String message = ((EditText)findViewById(R.id.edit_query)).getText().toString();</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">    setResult(<span class="number">52021</span>, intent);</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>OK，快编译安装试试吧~~~</p>
<h2 id="例图"><a href="#例图" class="headerlink" title="例图"></a>例图</h2><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bactivity%E9%97%B4%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/MainActivity.jpg" alt="MainActivity" style="zoom:20%;" />

<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bactivity%E9%97%B4%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/getmessage.jpg" alt="GetMessage" style="zoom:20%;" />

<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bactivity%E9%97%B4%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/ReturnMessage.jpg" alt="ReturnMessage" style="zoom:20%;" />

<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bactivity%E9%97%B4%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/ReturnTest.jpg" alt="ReturnTest" style="zoom:20%;" />

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a><code>MainActivity.java</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.intent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSendMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String message = ((EditText) findViewById(R.id.edit_msg)).getText().toString();</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, GetMessage.class);</span><br><span class="line">        intent.putExtra(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReturnMessageTest</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        startActivityForResult(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, ReturnMessage.class), <span class="number">2021</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span> (requestCode == <span class="number">2021</span> &amp;&amp; resultCode == <span class="number">52021</span>) &#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;接收到消息：&quot;</span> + data.getStringExtra(<span class="string">&quot;message&quot;</span>), Toast.LENGTH_LONG).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a><code>activity_main.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tips2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;40dp&quot;</span><br><span class="line">        android:text=&quot;@string/TextView&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/edit_msg&quot;</span><br><span class="line">        android:layout_width=&quot;200dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:autofillHints=&quot;&quot;</span><br><span class="line">        android:hint=&quot;@string/hint&quot;</span><br><span class="line">        android:inputType=&quot;text&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/tips2&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/send_message&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;onSendMessage&quot;</span><br><span class="line">        android:text=&quot;@string/send_message&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/button&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_msg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;onReturnMessageTest&quot;</span><br><span class="line">        android:text=&quot;@string/return_test&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_msg&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="GetMessage-java"><a href="#GetMessage-java" class="headerlink" title="GetMessage.java"></a><code>GetMessage.java</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.intent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetMessage</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_get_message);</span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String message = intent.getStringExtra(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">        ((TextView)findViewById(R.id.showMessage)).setText(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="activity-get-message-xml"><a href="#activity-get-message-xml" class="headerlink" title="activity_get_message.xml"></a><code>activity_get_message.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.GetMessage&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tips&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/tips&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/showMessage&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/showMessage&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="ReturnMessage-java"><a href="#ReturnMessage-java" class="headerlink" title="ReturnMessage.java"></a><code>ReturnMessage.java</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.intent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReturnMessage</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_return_message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReturnMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String message = ((EditText)findViewById(R.id.edit_query)).getText().toString();</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">        intent.putExtra(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">        setResult(<span class="number">52021</span>, intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="activity-return-message-xml"><a href="#activity-return-message-xml" class="headerlink" title="activity_return_message.xml"></a><code>activity_return_message.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.ReturnMessage&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/edit_query&quot;</span><br><span class="line">        android:layout_width=&quot;200dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:autofillHints=&quot;Hello world!&quot;</span><br><span class="line">        android:hint=&quot;@string/hint&quot;</span><br><span class="line">        android:inputType=&quot;text&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/textView&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/return_message&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;onReturnMessage&quot;</span><br><span class="line">        android:text=&quot;@string/return_message&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/edit_query&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;40dp&quot;</span><br><span class="line">        android:text=&quot;@string/TextView&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a><code>AndroidManifest.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.intent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.Intent&quot;&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=&quot;.GetMessage&quot;</span><br><span class="line">            android:parentActivityName=&quot;.MainActivity&quot;&gt;</span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=&quot;android.support.PARENT_ACTIVITY&quot;</span><br><span class="line">                android:value=&quot;.MainActivity&quot; /&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=&quot;.ReturnMessage&quot;</span><br><span class="line">            android:parentActivityName=&quot;.MainActivity&quot;&gt;</span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=&quot;android.support.PARENT_ACTIVITY&quot;</span><br><span class="line">                android:value=&quot;.MainActivity&quot; /&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="strings-xml"><a href="#strings-xml" class="headerlink" title="strings.xml"></a><code>strings.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>intent<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;TextView&quot;</span>&gt;</span>输入一些东西<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;return_message&quot;</span>&gt;</span>返回消息<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;return_test&quot;</span>&gt;</span>测试返回消息<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;send_message&quot;</span>&gt;</span>发送消息<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;hint&quot;</span>&gt;</span>message<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;tips&quot;</span>&gt;</span>接收到了以下信息：<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android学习笔记之四大组件</title>
    <url>/2021/01/07/android-xue-xi-bi-ji-zhi-si-da-zu-jian/</url>
    <content><![CDATA[<h1 id="Android学习笔记之四大组件"><a href="#Android学习笔记之四大组件" class="headerlink" title="Android学习笔记之四大组件"></a>Android学习笔记之四大组件</h1><p><strong>写在最前面</strong>：</p>
<p>开始写这篇文章时，我也是啥也不懂，啥也不会，因此文章中一定会有许多不足甚至错误！欢迎大家批评指正！</p>
<p>另外，此文章参考了许多文档、教程等，都在引用出贴出了链接，但如果侵犯了作者著作权，请联系我，我会在第一时间删除。</p>
<h2 id="四大组件"><a href="#四大组件" class="headerlink" title="四大组件"></a>四大组件</h2><ul>
<li>活动<code>Activity</code></li>
<li>服务<code>Service</code></li>
<li>广播接收器<code>BroadcastReceiver</code></li>
<li>内容提供程序<code>ContentProvider</code></li>
</ul>
<h2 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h2><blockquote>
<p><em>Activity</em> 是与用户交互的入口点。它表示拥有界面的单个屏幕。例如，电子邮件应用可能有一个显示新电子邮件列表的 Activity、一个用于撰写电子邮件的 Activity 以及一个用于阅读电子邮件的 Activity。尽管这些 Activity 通过协作在电子邮件应用中形成一种紧密结合的用户体验，但每个 Activity 都独立于其他 Activity 而存在。因此，其他应用可以启动其中任何一个 Activity（如果电子邮件应用允许）。例如，相机应用可以启动电子邮件应用内用于撰写新电子邮件的 Activity，以便用户共享图片。Activity 有助于完成系统和应用程序之间的以下重要交互：</p>
<ul>
<li>追踪用户当前关心的内容（屏幕上显示的内容），以确保系统继续运行托管 Activity 的进程。</li>
<li>了解先前使用的进程包含用户可能返回的内容（已停止的 Activity），从而更优先保留这些进程。</li>
<li>帮助应用处理终止其进程的情况，以便用户可以返回已恢复其先前状态的 Activity。</li>
<li>提供一种途径，让应用实现彼此之间的用户流，并让系统协调这些用户流。（此处最经典的示例是共享。）</li>
</ul>
<p>——<a href="https://developer.android.google.cn/guide/components/fundamentals">Android官方文档</a></p>
</blockquote>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>也就是说，<code>Activity</code>是一个单独显示出来的、在前台运行的页面。一个应用程序可以有1个或多个活动，而没有任何限制。每个为应用程序所定义的活动都需要在<code>AndroidManifest.xml</code>中声明。l例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.helloworld&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.HelloWorld&quot;&gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=&quot;.DisplayMessageActivity&quot;</span><br><span class="line">            android:parentActivityName=&quot;.MainActivity&quot;&gt;</span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=&quot;android.support.PARENT_ACTIVITY&quot;</span><br><span class="line">                android:value=&quot;.MainActivity&quot; /&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>应用的主要活动需要在清单中声明，且意图过滤器标签中需要包含 MAIN 动作和 LAUNCHER 类别。</p>
<p>为了更好的展现<code>Activity</code>的生命周期，引用一张来自<a href="https://www.runoob.com/android/android-acitivities.html">菜鸟教程</a>的图片：</p>
<p><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/activity.jpg" alt="activity"></p>
<p>如图所示，在<code>Activity</code>的生命周期中，有几个重要的回调函数：</p>
<table>
<thead>
<tr>
<th align="left">回调</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>onCreate()</code></td>
<td align="left">在<code>Activity</code>第一次创建时调用</td>
</tr>
<tr>
<td align="left"><code>onStart()</code></td>
<td align="left">在<code>Activity</code>为用户可见时被调用</td>
</tr>
<tr>
<td align="left"><code>onResume()</code></td>
<td align="left">在应用程序与用户开始可交互的时候调用</td>
</tr>
<tr>
<td align="left"><code>onPause()</code></td>
<td align="left">在当前<code>Activity</code>将要被暂停，其他<code>Activity</code>将要被恢复时调用</td>
</tr>
<tr>
<td align="left"><code>onStop()</code></td>
<td align="left">当活动不在可见时调用</td>
</tr>
<tr>
<td align="left"><code>onDestroy()</code></td>
<td align="left">当活动被系统销毁之前调用</td>
</tr>
<tr>
<td align="left"><code>onRestart()</code></td>
<td align="left">当活动被停止以后重新打开时调用</td>
</tr>
</tbody></table>
<p>例如，</p>
<p>用户打开你的应用程序，<code>onCreate()</code>被调用，代表<code>Activity</code>正式启动</p>
<p>然后界面渲染完成，并调用<code>onStart()</code>函数</p>
<p>你的程序可以开始和用户交互之前，调用<code>onResume()</code>函数</p>
<p>这时，用户进入了QQ查看消息，你的程序变被暂停，调用<code>onPause()</code>函数，注意<strong>被暂停的活动无法接受用户输入，不能执行任何代码。</strong></p>
<p>好，用户回复了几条信息，并返回你的程序，你的程序又即将可以和用户交互，在这之前，调用<code>onResume()</code>函数</p>
<p>但是如果用户返回QQ并不是回复消息，而是看了个超高清视频呢？由于用户手机内存不足，而用户要求执行的程序优先级比较高，于是很抱歉，你的程序的<strong>被kill</strong></p>
<p>当用户看完视频，返回你的程序，发现OH~NO，你的程序被kill了，只能从<code>onCreate()</code>开始重新创建程序</p>
<p>当然，如果你的程序被挂起太长时间，比如用户打开哔哩哔哩刷了一个小时的视频，那么同样的，你的程序由于挂起时间过长，也被系统停止了，但和进程被kill不同，如果用户依然需要使用你的程序，那么只需要回到你的程序，而你的程序也只需要调用<code>onRestart()</code></p>
<p>如果程序执行完了用户的任务，即将正常退出，则在退出之前，调用<code>onDestroy()</code>来进行收尾工作</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>下面用一个例子来展示<code>Activity</code>的生命周期：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.lifecycle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    String msg = <span class="string">&quot;Android: &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onCreate() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当活动即将可见时调用 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onStart() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当活动可见时调用 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onResume() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当其他活动获得焦点时调用 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onPause() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当活动不再可见时调用 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onStop() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 当活动将被销毁时调用 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Log.d(msg, <span class="string">&quot;The onDestroy() event&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>连接手机，启动！</p>
<p>在Android Studio左下角的<code>LogCat</code>中出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2021-01-07 11:57:44.614 23856-23856&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onCreate() event</span><br><span class="line">2021-01-07 11:57:44.617 23856-23856&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onStart() event</span><br><span class="line">2021-01-07 11:57:44.618 23856-23856&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onResume() event</span><br></pre></td></tr></table></figure>
<p>在手机上按返回键，出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2021-01-07 12:00:14.416 24658-24658&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onPause() event</span><br><span class="line">2021-01-07 12:00:14.762 24658-24658&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onStop() event</span><br><span class="line">2021-01-07 12:00:14.766 24658-24658&#x2F;host.skyone.lifecycle D&#x2F;Android:: The onDestroy() event</span><br></pre></td></tr></table></figure>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><blockquote>
<p><em>服务</em>是一个通用入口点，用于因各种原因使应用在后台保持运行状态。它是一种在后台运行的组件，用于执行长时间运行的操作或为远程进程执行作业。服务不提供界面。例如，当用户使用其他应用时，服务可能会在后台播放音乐或通过网络获取数据，但这不会阻断用户与 Activity 的交互。诸如 Activity 等其他组件可以启动服务，使该服务运行或绑定到该服务，以便与其进行交互。事实上，有两种截然不同的语义服务可以告知系统如何管理应用：已启动服务会告知系统使其运行至工作完毕。此类工作可以是在后台同步一些数据，或者在用户离开应用后继续播放音乐。在后台同步数据或播放音乐也代表了两种不同类型的已启动服务，而这些服务可以修改系统处理它们的方式：</p>
<ul>
<li>音乐播放是用户可直接感知的服务，因此，应用会向用户发送通知，表明其希望成为前台，从而告诉系统此消息；在此情况下，系统明白它应尽全力维持该服务进程运行，因为进程消失会令用户感到不快。</li>
<li>通常，用户不会意识到常规后台服务正处于运行状态，因此系统可以更自由地管理其进程。如果系统需要使用 RAM 来处理用户更迫切关注的内容，则其可能允许终止服务（然后在稍后的某个时刻重启服务）。</li>
</ul>
<p>绑定服务之所以能运行，原因是某些其他应用（或系统）已表示希望使用该服务。从根本上讲，这是为另一个进程提供 API 的服务。因此，系统会知晓这些进程之间存在依赖关系，所以如果进程 A 绑定到进程 B 中的服务，系统便知道自己需使进程 B（及其服务）为进程 A 保持运行状态。此外，如果进程 A 是用户关心的内容，系统随即也知道将进程 B 视为用户关心的内容。由于存在灵活性（无论好坏），服务已成为非常有用的构建块，并且可实现各种高级系统概念。动态壁纸、通知侦听器、屏幕保护程序、输入方法、无障碍功能服务以及众多其他核心系统功能均可构建为在其运行时由应用实现、系统绑定的服务。</p>
<p><strong>注意：</strong>如果您的应用面向 Android 5.0（API 级别 21）或更高版本，请使用 <code>JobScheduler</code> 类来调度操作。<code>JobScheduler</code> 的优势在于，它能通过优化作业调度来降低功耗，以及使用<code>Doze API</code>，从而达到省电目的。如需了解有关使用此类的更多信息，请参阅 <code>JobScheduler</code> 参考文档。</p>
<p>——<a href="https://developer.android.google.cn/guide/components/fundamentals">Android官方文档</a></p>
</blockquote>
<h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>通俗点来说：服务是一个后台运行的组件，执行<strong>长时间运行</strong>且<strong>不需要用户交互</strong>的任务。<strong>即使应用被销毁也依然可以工作</strong>。</p>
<blockquote>
<p>这部分能力有限，实在无法举例，只能再次引用<a href="https://www.runoob.com/android/android-services.html">菜鸟教程</a>文章的部分内容。</p>
</blockquote>
<p>服务基本上包含两种状态：</p>
<table>
<thead>
<tr>
<th align="left">状态</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>Started</code></td>
<td align="left">Android的应用程序组件，如活动，通过<code>startService()</code>启动了服务，则服务是Started状态。一旦启动，服务可以在后台无限期运行，即使启动它的组件已经被销毁。</td>
</tr>
<tr>
<td align="left"><code>Bound</code></td>
<td align="left">当Android的应用程序组件通过<code>bindService()</code>绑定了服务，则服务是Bound状态。Bound状态的服务提供了一个客户服务器接口来允许组件与服务进行交互，如发送请求，获取结果，甚至通过<code>IPC</code>来进行跨进程通信。</td>
</tr>
</tbody></table>
<p><code>Service</code>同样拥有生命周期，可以实现监控服务状态的变化，可以在合适的阶段执行工作。</p>
<p><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/services.jpg" alt="services"></p>
<p><code>Service</code>包含以下回调：</p>
<table>
<thead>
<tr>
<th align="left">回调</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>onStartCommand()</code></td>
<td align="left">其他组件(如活动)通过调用<code>startService()</code>来请求启动服务时，系统调用该方法。如果你实现该方法，你有责任在工作完成时通过<code>stopSelf()</code>或者<code>stopService()</code>方法来停止服务。</td>
</tr>
<tr>
<td align="left"><code>onBind</code></td>
<td align="left">当其他组件想要通过<code>bindService()</code>来绑定服务时，系统调用该方法。如果你实现该方法，你需要返回<code>IBinder</code>对象来提供一个接口，以便客户来与服务通信。你必须实现该方法，如果你不允许绑定，则直接返回null。</td>
</tr>
<tr>
<td align="left"><code>onUnbind()</code></td>
<td align="left">当客户中断所有服务发布的特殊接口时，系统调用该方法。</td>
</tr>
<tr>
<td align="left"><code>onRebind()</code></td>
<td align="left">当新的客户端与服务连接，且此前它已经通过<code>onUnbind(Intent)</code>通知断开连接时，系统调用该方法。</td>
</tr>
<tr>
<td align="left"><code>onCreate()</code></td>
<td align="left">当服务通过<code>onStartCommand()</code>和<code>onBind()</code>被第一次创建的时候，系统调用该方法。该调用要求执行一次性安装。</td>
</tr>
<tr>
<td align="left"><code>onDestroy()</code></td>
<td align="left">当服务不再有用或者被销毁时，系统调用该方法。你的服务需要实现该方法来清理任何资源，如线程，已注册的监听器，接收器等。</td>
</tr>
</tbody></table>
<h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p>一个简单的示例(自己写的)：</p>
<ul>
<li><code>MainActivity.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.lifecycle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startService</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        startService(<span class="keyword">new</span> Intent(getBaseContext(), MyService.class));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endService</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        stopService(<span class="keyword">new</span> Intent(getBaseContext(), MyService.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>MyService.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.lifecycle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// throw new UnsupportedOperationException(&quot;Not yet implemented&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;服务启动成功！&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">        <span class="keyword">return</span> START_STICKY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;服务关闭成功！&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>activity_main.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;32dp&quot;</span><br><span class="line">        android:text=&quot;Hello World!&quot;</span><br><span class="line">        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintRight_toRightOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;startService&quot;</span><br><span class="line">        android:text=&quot;@string/start_service&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/textView&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;endService&quot;</span><br><span class="line">        android:text=&quot;@string/end_service&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/button&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>strings.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>Life Cycle<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;start_service&quot;</span>&gt;</span>开启服务<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;end_service&quot;</span>&gt;</span>关闭服务<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>AndroidManifest.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.lifecycle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.LifeCycle&quot;&gt;</span><br><span class="line">        &lt;service</span><br><span class="line">            android:name=&quot;.MyService&quot;</span><br><span class="line">            android:enabled=&quot;true&quot;</span><br><span class="line">            android:exported=&quot;false&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>运行！分别按两个按钮：</p>
<p><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1.jpg" alt="启动服务" style="zoom:25%;" /><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1.jpg" alt="关闭服务" style="zoom:25%;" /></p>
<h2 id="BroadcastReceiver"><a href="#BroadcastReceiver" class="headerlink" title="BroadcastReceiver"></a>BroadcastReceiver</h2><blockquote>
<p>借助<em>广播接收器</em>组件，系统能够在常规用户流之外向应用传递事件，从而允许应用响应系统范围内的广播通知。由于广播接收器是另一个明确定义的应用入口，因此系统甚至可以向当前未运行的应用传递广播。例如，应用可通过调度提醒来发布通知，以告知用户即将发生的事件。而且，通过将该提醒传递给应用的广播接收器，应用在提醒响起之前即无需继续运行。许多广播均由系统发起，例如，通知屏幕已关闭、电池电量不足或已拍摄照片的广播。应用也可发起广播，例如，通知其他应用某些数据已下载至设备，并且可供其使用。尽管广播接收器不会显示界面，但其可以创建状态栏通知，在发生广播事件时提醒用户。但广播接收器更常见的用途只是作为通向其他组件的<em>通道</em>，旨在执行极少量的工作。例如，它可能会根据带 <code>JobScheduler</code> 的事件调度 <code>JobService</code> 来执行某项工作</p>
<p>——<a href="https://developer.android.google.cn/guide/components/fundamentals#broadcast-receiver">Android官方文档</a></p>
</blockquote>
<h3 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h3><p>就像我们现实生活中的广播接收器一样，<code>BroadcastReceiver</code>就是用来接收系统或其他<code>Activity</code>放出的广播消息的。这也是不同<code>Activity</code>间相互通信的桥梁。</p>
<p><img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/broadcast.jpg" alt="broadcast"></p>
<p>下表是一些系统广播出来的事件：</p>
<table>
<thead>
<tr>
<th align="left">事件常量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>android.intent.action.BATTERY_CHANGED</code></td>
<td align="left">持久的广播，包含电池的充电状态，级别和其他信息。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.BATTERY_LOW</code></td>
<td align="left">标识设备的低电量条件。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.BATTERY_OKAY</code></td>
<td align="left">标识电池在电量低之后，现在已经好了。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.BOOT_COMPLETED</code></td>
<td align="left">在系统完成启动后广播一次。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.BUG_REPORT</code></td>
<td align="left">显示报告bug的活动。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.CALL</code></td>
<td align="left">执行呼叫数据指定的某人。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.CALL_BUTTON</code></td>
<td align="left">用户点击”呼叫”按钮打开拨号器或者其他拨号的合适界面。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.DATE_CHANGED</code></td>
<td align="left">日期发生改变。</td>
</tr>
<tr>
<td align="left"><code>android.intent.action.REBOOT</code></td>
<td align="left">设备重启。</td>
</tr>
</tbody></table>
<p>实现一个简单的广播接收器需要：</p>
<ul>
<li>创建广播接收器</li>
<li>注册广播接收器</li>
</ul>
<p>如果使用Android Studio，在创建广播接收器后IDE会自动在<code>AndroidManifest.xml</code>注册广播接收器</p>
<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/%E5%88%9B%E5%BB%BA%E5%B9%BF%E6%92%AD%E6%8E%A5%E6%94%B6%E5%99%A8.png" alt="创建广播接收器" style="zoom: 50%;" />

<h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><p>老规矩，下面由一个例子来展示如何用广播传输<code>Intent</code></p>
<ul>
<li><code>MainActivity.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.broadcastreceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXTRA_MESSAGE = <span class="string">&quot;host.skyone.broadcastreceiver.MESSAGE&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        EditText editText = (EditText) findViewById(R.id.editArea);</span><br><span class="line">        String msg = editText.getText().toString();</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyReceiver.class);</span><br><span class="line">        intent.putExtra(EXTRA_MESSAGE, msg);</span><br><span class="line">        sendBroadcast(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>activity_main.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/editArea&quot;</span><br><span class="line">        android:layout_width=&quot;250dp&quot;</span><br><span class="line">        android:layout_height=&quot;45dp&quot;</span><br><span class="line">        android:ems=&quot;10&quot;</span><br><span class="line">        android:inputType=&quot;textPersonName&quot;</span><br><span class="line">        android:text=&quot;@string/edit_area&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/button&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:onClick=&quot;sendMessage&quot;</span><br><span class="line">        android:text=&quot;@string/send_msg&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>MyReceiver.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.broadcastreceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> This method is called when the BroadcastReceiver is receiving</span></span><br><span class="line">        String msg = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);</span><br><span class="line">        Toast.makeText(context,<span class="string">&quot;侦测到广播信息:&quot;</span> + msg, Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>strings.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>测试广播接收器<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;send_msg&quot;</span>&gt;</span>发送广播<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;edit_area&quot;</span>&gt;</span>输入信息<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>AndroidManifest.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.broadcastreceiver&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.BroadcastReceiver&quot;&gt;</span><br><span class="line">        &lt;receiver</span><br><span class="line">            android:name=&quot;.MyReceiver&quot;</span><br><span class="line">            android:enabled=&quot;true&quot;</span><br><span class="line">            android:exported=&quot;true&quot;</span><br><span class="line">            android:permission=&quot;TODO&quot;</span><br><span class="line">            tools:ignore=&quot;ExportedReceiver&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样的，编译，测试，成功！</p>
<img src="https://tc.skyone.host/blog/post/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/%E5%B9%BF%E6%92%AD%E6%B5%8B%E8%AF%95.jpg" alt="广播测试" style="zoom:25%;" />

<h2 id="内容提供程序"><a href="#内容提供程序" class="headerlink" title="内容提供程序"></a>内容提供程序</h2><blockquote>
<p><em>内容提供程序</em>管理一组共享的应用数据，您可以将这些数据存储在文件系统、SQLite 数据库、网络中或者您的应用可访问的任何其他持久化存储位置。其他应用可通过内容提供程序查询或修改数据（如果内容提供程序允许）。例如，Android 系统可提供管理用户联系人信息的内容提供程序。因此，任何拥有适当权限的应用均可查询内容提供程序（如 <code>ContactsContract.Data</code>），以读取和写入特定人员的相关信息。我们很容易将内容提供程序看作数据库上的抽象，因为其内置的大量 API 和支持时常适用于这一情况。但从系统设计的角度看，二者的核心目的不同。对系统而言，内容提供程序是应用的入口点，用于发布由 URI 架构识别的已命名数据项。因此，应用可以决定如何将其包含的数据映射到 URI 命名空间，进而将这些 URI 分发给其他实体。反之，这些实体也可使用分发的 URI 来访问数据。在管理应用的过程中，系统可以执行以下特殊操作：</p>
<ul>
<li>分配 URI 无需应用保持运行状态，因此 URI 可在其所属的应用退出后继续保留。当系统必须从相应的 URI 检索应用数据时，系统只需确保所属应用仍处于运行状态。</li>
<li>这些 URI 还会提供重要的细粒度安全模型。例如，应用可将其所拥有图像的 URI 放到剪贴板上，但将其内容提供程序锁定，以便其他应用程序无法随意访问它。当第二个应用尝试访问剪贴板上的 URI 时，系统可允许该应用通过临时的 <em>URI 授权</em>来访问数据，这样便只能访问 URI 后面的数据，而非第二个应用中的其他任何内容。</li>
</ul>
<p>内容提供程序也适用于读取和写入您的应用不共享的私有数据。</p>
<p>——<a href="https://developer.android.google.cn/guide/components/fundamentals">Android官方文档</a></p>
</blockquote>
<h3 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h3><p>官网说得比较简单，但做起来。。。有点难度</p>
<p>简单来说：内容提供者管理来自网络、SQLite数据库、文件、其他应用的数据，并使app可以更方便的使用这些数据。比如，在应用程序之间共享数据。这时内容提供者变得非常有用。</p>
<p>内容提供程序的职责和数据库很像，你可以查询，编辑它的内容。创建内容提供程序你通常需要重写以下函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><code>onCreate()</code></td>
<td>当提供者被启动时调用</td>
</tr>
<tr>
<td><code>query()</code></td>
<td>该方法从客户端接受请求。结果是返回指针(Cursor)对象</td>
</tr>
<tr>
<td><code>insert()</code></td>
<td>该方法向内容提供者插入新的记录</td>
</tr>
<tr>
<td><code>delete()</code></td>
<td>该方法从内容提供者中删除已存在的记录</td>
</tr>
<tr>
<td><code>update()</code></td>
<td>该方法更新内容提供者中已存在的记录</td>
</tr>
<tr>
<td><code>getType()</code></td>
<td>该方法为给定的URI返回元数据类型</td>
</tr>
</tbody></table>
<p>很简单，就是增删改查嘛。</p>
<h3 id="内容URI"><a href="#内容URI" class="headerlink" title="内容URI"></a>内容URI</h3><p>想要从内容提供程序获取数据，需要指定数据的<code>URI</code>，形如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;prefix&gt;:&#x2F;&#x2F;&lt;authority&gt;&#x2F;&lt;data_type&gt;&#x2F;&lt;id&gt;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="left">部分</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>prefix</code></td>
<td align="left">前缀：一直被设置为<code>content://</code></td>
</tr>
<tr>
<td align="left"><code>authority</code></td>
<td align="left">授权：指定内容提供者的名称，例如联系人，浏览器等。第三方的内容提供者可以是全名，如：<code>cn.programmer.statusprovider</code></td>
</tr>
<tr>
<td align="left"><code>data_type</code></td>
<td align="left">数据类型：这个表明这个特殊的内容提供者中的数据的类型。例如：你要通过内容提供者Contacts来获取所有的通讯录，数据路径是people，那么URI将是下面这样：content://contacts/people</td>
</tr>
<tr>
<td align="left"><code>id</code></td>
<td align="left">这个指定特定的请求记录。例如：你在内容提供者Contacts中查找联系人的ID号为5，那么URI看起来是这样：<code>content://contacts/people/5</code></td>
</tr>
</tbody></table>
<p>例如：我写了个程序<code>host.skyone.test</code>，要查询<code>College</code>里的<code>students</code>的第5条，URI为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">content:&#x2F;&#x2F;host.skyone.test.College&#x2F;students&#x2F;5</span><br></pre></td></tr></table></figure>
<h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><ul>
<li><code>MainActivity.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.contentprovider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickAddStudent</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">        values.put(StudentProvider.NAME,</span><br><span class="line">                ((EditText) findViewById(R.id.nameEditText)).getText().toString());</span><br><span class="line">        values.put(StudentProvider.SEX,</span><br><span class="line">                ((EditText) findViewById(R.id.sexEditText)).getText().toString());</span><br><span class="line">        Uri uri = getContentResolver().insert(StudentProvider.CONTENT_URI, values);</span><br><span class="line"></span><br><span class="line">        Toast.makeText(getBaseContext(), uri.toString(), Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickSearchStudent</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String URL = <span class="string">&quot;content://host.skyone.contentprovider.College/students&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Uri students = Uri.parse(URL);</span><br><span class="line">        <span class="comment">//Cursor c = managedQuery(students, null, null, null, &quot;name&quot;);</span></span><br><span class="line">        Cursor cursor = getContentResolver().query(students, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>,</span><br><span class="line">                        cursor.getString(cursor.getColumnIndex(StudentProvider._ID)) +</span><br><span class="line">                                <span class="string">&quot;, &quot;</span> +  cursor.getString(cursor.getColumnIndex( StudentProvider.NAME)) +</span><br><span class="line">                                <span class="string">&quot;, &quot;</span> + cursor.getString(cursor.getColumnIndex( StudentProvider.SEX)),</span><br><span class="line">                        Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125; <span class="keyword">while</span> (cursor.moveToNext());</span><br><span class="line">        &#125;</span><br><span class="line">        cursor.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClickDeleteStudent</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String URL = <span class="string">&quot;content://host.skyone.contentprovider.College/students&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Uri students = Uri.parse(URL);</span><br><span class="line">        <span class="comment">//Cursor c = managedQuery(students, null, null, null, &quot;name&quot;);</span></span><br><span class="line">        getContentResolver().delete(Uri.parse(URL), <span class="string">&quot;&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>StudentProvider.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> host.skyone.contentprovider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentProvider;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentUris;</span><br><span class="line"><span class="keyword">import</span> android.content.UriMatcher;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteException;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PROVIDER_NAME = <span class="string">&quot;host.skyone.contentprovider.College&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">&quot;content://&quot;</span> + PROVIDER_NAME + <span class="string">&quot;/students&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Uri CONTENT_URI = Uri.parse(URL);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String _ID = <span class="string">&quot;_id&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">&quot;name&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SEX = <span class="string">&quot;sex&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, String&gt; STUDENT_PROJECTION_MAP;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STUDENTS = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STUDENT_ID = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher uriMatcher;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        uriMatcher = <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(PROVIDER_NAME, <span class="string">&quot;students&quot;</span>, STUDENTS);</span><br><span class="line">        uriMatcher.addURI(PROVIDER_NAME, <span class="string">&quot;students/#&quot;</span>, STUDENT_ID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase db;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String DATABASE_NAME = <span class="string">&quot;College&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String STUDENTS_TABLE_NAME = <span class="string">&quot;students&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DATABASE_VERSION = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_DB_TABLE =</span><br><span class="line">            <span class="string">&quot; CREATE TABLE &quot;</span> + STUDENTS_TABLE_NAME +</span><br><span class="line">                    <span class="string">&quot; (_id INTEGER PRIMARY KEY AUTOINCREMENT, &quot;</span> +</span><br><span class="line">                    <span class="string">&quot; name TEXT NOT NULL, &quot;</span> +</span><br><span class="line">                    <span class="string">&quot; sex TEXT NOT NULL);&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">        DatabaseHelper(Context content) &#123;</span><br><span class="line">            <span class="keyword">super</span>(content, DATABASE_NAME, <span class="keyword">null</span>, DATABASE_VERSION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">            db.execSQL(CREATE_DB_TABLE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">            db.execSQL(<span class="string">&quot;DROP TABLE IF EXISTS &quot;</span> + STUDENTS_TABLE_NAME);</span><br><span class="line">            onCreate(db);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StudentProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Context context = getContext();</span><br><span class="line">        DatabaseHelper databaseHelper = <span class="keyword">new</span> DatabaseHelper(context);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to initialize your content provider on startup.</span></span><br><span class="line">        db = databaseHelper.getWritableDatabase();</span><br><span class="line">        <span class="keyword">return</span> db != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> rowID = db.insert(STUDENTS_TABLE_NAME, <span class="string">&quot;&quot;</span>, values);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rowID &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to insert a new row.</span></span><br><span class="line"></span><br><span class="line">            Uri _uri = ContentUris.withAppendedId(CONTENT_URI, rowID);</span><br><span class="line">            getContext().getContentResolver().notifyChange(_uri, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">return</span> uri;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SQLiteException(<span class="string">&quot;Failed to add a record into &quot;</span> + uri);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">                        String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        SQLiteQueryBuilder queryBuilder = <span class="keyword">new</span> SQLiteQueryBuilder();</span><br><span class="line">        queryBuilder.setTables(STUDENTS_TABLE_NAME);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> STUDENTS:</span><br><span class="line">                queryBuilder.setProjectionMap(STUDENT_PROJECTION_MAP);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> STUDENT_ID:</span><br><span class="line">                queryBuilder.appendWhere(_ID + <span class="string">&quot;=&quot;</span> + uri.getPathSegments().get(<span class="number">1</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unknown URI &quot;</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (sortOrder == <span class="keyword">null</span> || sortOrder.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            sortOrder = NAME;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle query requests from clients.</span></span><br><span class="line">        Cursor cursor = queryBuilder.query(db, projection, selection, selectionArgs, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder);</span><br><span class="line">        cursor.setNotificationUri(getContext().getContentResolver(), uri);</span><br><span class="line">        <span class="keyword">return</span> cursor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> STUDENTS:</span><br><span class="line">                count = db.delete(STUDENTS_TABLE_NAME, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> STUDENT_ID:</span><br><span class="line">                String id = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                count = db.delete(STUDENTS_TABLE_NAME, _ID + <span class="string">&quot; = &quot;</span> + id +</span><br><span class="line">                        (!TextUtils.isEmpty(selection) ? <span class="string">&quot; AND (&quot;</span> + selection + <span class="string">&#x27;)&#x27;</span> : <span class="string">&quot;&quot;</span>), selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unknown URI &quot;</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        getContext().getContentResolver().notifyChange(uri, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">                      String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> STUDENTS:</span><br><span class="line">                count = db.update(STUDENTS_TABLE_NAME, values, selection, selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> STUDENT_ID:</span><br><span class="line">                count = db.update(STUDENTS_TABLE_NAME, values, _ID + <span class="string">&quot; = &quot;</span> + uri.getPathSegments().get(<span class="number">1</span>) +</span><br><span class="line">                        (!TextUtils.isEmpty(selection) ? <span class="string">&quot; AND (&quot;</span> + selection + <span class="string">&#x27;)&#x27;</span> : <span class="string">&quot;&quot;</span>), selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unknown URI &quot;</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">        getContext().getContentResolver().notifyChange(uri, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> STUDENTS:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.dir/vnd.example.students&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> STUDENT_ID:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vnd.android.cursor.item/vnd.example.students&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unsupported URI: &quot;</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>AndroidManifest.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;host.skyone.contentprovider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:theme=&quot;@style/Theme.ContentProvider&quot;&gt;</span><br><span class="line">        &lt;provider</span><br><span class="line">            android:name=&quot;.StudentProvider&quot;</span><br><span class="line">            android:authorities=&quot;host.skyone.contentprovider.College&quot;</span><br><span class="line">            android:enabled=&quot;true&quot;</span><br><span class="line">            android:exported=&quot;false&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>activity_main.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/nameEditText&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;32dp&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;30dp&quot;</span><br><span class="line">        android:ems=&quot;10&quot;</span><br><span class="line">        android:inputType=&quot;textPersonName&quot;</span><br><span class="line">        android:text=&quot;&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@+id/sexEditText&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=&quot;@+id/sexEditText&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;32dp&quot;</span><br><span class="line">        android:ems=&quot;10&quot;</span><br><span class="line">        android:inputType=&quot;textPersonName&quot;</span><br><span class="line">        android:text=&quot;&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginStart=&quot;30dp&quot;</span><br><span class="line">        android:layout_marginTop=&quot;30dp&quot;</span><br><span class="line">        android:onClick=&quot;onClickAddStudent&quot;</span><br><span class="line">        android:text=&quot;@string/add&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/sexEditText&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;30dp&quot;</span><br><span class="line">        android:onClick=&quot;onClickSearchStudent&quot;</span><br><span class="line">        android:text=&quot;@string/search&quot;</span><br><span class="line">        app:layout_constraintEnd_toStartOf=&quot;@+id/button3&quot;</span><br><span class="line">        app:layout_constraintStart_toEndOf=&quot;@+id/button&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/sexEditText&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/nameTextView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;54dp&quot;</span><br><span class="line">        android:text=&quot;@string/name&quot;</span><br><span class="line">        app:layout_constraintBottom_toTopOf=&quot;@id/sexTextView&quot;</span><br><span class="line">        app:layout_constraintEnd_toStartOf=&quot;@+id/nameEditText&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/sexTextView&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;@string/sex&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toStartOf=&quot;@+id/sexEditText&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/button3&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;30dp&quot;</span><br><span class="line">        android:layout_marginEnd=&quot;30dp&quot;</span><br><span class="line">        android:onClick=&quot;onClickDeleteStudent&quot;</span><br><span class="line">        android:text=&quot;@string/delete&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toBottomOf=&quot;@+id/sexEditText&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>String.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>内容提供者测试<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>提示</strong>：</p>
<p>这一次的应用退出后数据仍然可以保存，如果误操作导致数据库里的数据表不正确，可以清除应用数据或者修改数据库版本号</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
